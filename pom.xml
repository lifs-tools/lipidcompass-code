<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>org.lipidcompass</groupId>
    <artifactId>lipidcompass</artifactId>
    <version>1.0.13-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Lipid Compass</name>
    <url>https://apps.lifs-tools.org/lipidcompass</url>	
    <licenses>
        <license>
            <name>The Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <developers>
        <developer>
            <name>Nils Hoffmann</name>
            <email>nils.hoffmann@cebitec.uni-bielefeld.de</email>
            <organization>LIFS</organization>
            <organizationUrl>https://lifs-tools.org</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
            <timezone>Europe/Berlin</timezone>
        </developer>
    </developers>
    <scm>
        <connection>scm:git:https://github.com/lifs-tools/lipidcompass.git</connection>
        <developerConnection>scm:git:https://github.com/lifs-tools/lipidcompass.git</developerConnection>
        <url>https://github.com/lifs-tools/lipidcompass</url>
    </scm>
    <organization>
        <name>LIFS</name>
        <url>https://lifs-tools.org</url>
    </organization>
    
    <inceptionYear>2021</inceptionYear>
    
    <modules>
        <module>backend</module>
        <module>model</module>
        <module>data-importer</module>
        <module>registry</module>
        <module>mztab-dbmodel</module>
        <module>core</module>
        <module>backend-core</module>
        <module>test-utils</module>
        <module>gateway</module>
        <module>ui</module>
        <module>service-core</module>
    </modules>
    
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.4</version>
        <relativePath />
    </parent>

    <!-- NOTE: You need to use a profile for set the properties of the database (go to beans.spring.xml to see more) -->

    <repositories>
        <repository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>artifactory-releases</id>
            <name>artifactory-releases</name>
            <url>https://m.lifs-tools.org/artifactory/libs-release</url>
        </repository>
        <repository>
            <snapshots />
            <id>artifactory-snapshots</id>
            <name>artifactory-snapshots</name>
            <url>https://m.lifs-tools.org/artifactory/libs-snapshot</url>
        </repository>
        <repository>
            <id>nexus-ebi-release-repo</id>
            <name>nexus-ebi-release-repo</name>
            <url>http://www.ebi.ac.uk/Tools/maven/repos/content/groups/ebi-repo/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>ebi-repo-snapshots</id>
            <name>EBI maven snapshots repository</name>
            <url>https://www.ebi.ac.uk/~maven/m2repo_snapshots</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>interval:10080</updatePolicy> <!-- weekly -->
            </snapshots>
        </repository>
    </repositories>

    <properties>
        <!--<jetty.port>9090</jetty.port>-->
        <!-- <jetty.contextPath>cxf-demo</jetty.contextPath> -->
        <!--<jetty.contextPath></jetty.contextPath>-->

        <!--<cxf.version>2.4.1</cxf.version>-->
        <!-- these should be overriden by a custom profile in settings.xml -->
        <!--<db.url>jdbc:mysql://localhost:3306/lipidhome</db.url>-->
        <!--<db.user>lipidhome</db.user>-->
        <!--<db.password>lipidhome</db.password>-->
        <!-- also change the version in the parent pom above -->
        <spring.boot.version>3.3.4</spring.boot.version>
        <arangodb.data.version>4.4.0</arangodb.data.version>
        <!--<solr.version>8.11.1</solr.version>-->
        <guava.version>32.1.3-jre</guava.version>
        <cdk.version>2.8</cdk.version>
        <spring.cloud.version>2023.0.3</spring.cloud.version>
        <docker.service.prefix>lipidcompass</docker.service.prefix>
        <docker.image.prefix>docker.lifs-tools.org/lifs</docker.image.prefix>
        <lombok.version>1.18.34</lombok.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>17</java.version>
        <!--<docker.base.image>docker.lifs-tools.org/eclipse-temurin</docker.base.image>-->
        <docker.base.image>azul/zulu-openjdk-alpine</docker.base.image>
        <docker.base.image.version>17-jre-headless-latest</docker.base.image.version>
        <!--<docker.base.image.version>17-jdk-alpine</docker.base.image.version>-->
        <deploy.env></deploy.env>
        <skip.docker>true</skip.docker>
        <app.port>8083</app.port>
        <jmztabm.version>1.0.6</jmztabm.version>
        <testcontainers.version>1.17.6</testcontainers.version>
        <keycloak.version>16.1.1</keycloak.version>
        <jgoslin.version>2.2.0</jgoslin.version>
        <lipidspace.version>1.1.0</lipidspace.version>
        <minio.version>8.5.12</minio.version>
        <springdoc.version>2.6.0</springdoc.version>
        <swagger-core.version>2.2.23</swagger-core.version>
        <spring-boot.run.jvmArguments>--add-opens java.base/java.nio.file=ALL-UNNAMED --add-opens java.base/java.net=ALL-UNNAMED</spring-boot.run.jvmArguments>
        <ga.id>13</ga.id>
        <ga.url>https://lifs-tools.org/matomo/matomo.php</ga.url>
        <ga.app.url>https://lipidcompass.org</ga.app.url>
        <arangodb.drop-database>false</arangodb.drop-database>
    </properties>

    <build>
        <finalName>${project.artifactId}-${project.version}</finalName>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.2.0</version>
                    <configuration>
                        <delimiters>
                            <delimiter>@</delimiter>
                        </delimiters>
                        <useDefaultDelimiters>false</useDefaultDelimiters>
                        <nonFilteredFileExtensions>
                            <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
                            <nonFilteredFileExtension>xls</nonFilteredFileExtension>
                            <nonFilteredFileExtension>xlsx</nonFilteredFileExtension>
                            <nonFilteredFileExtension>zip</nonFilteredFileExtension>
                            <nonFilteredFileExtension>ico</nonFilteredFileExtension>
                            <nonFilteredFileExtension>ttf</nonFilteredFileExtension>
                            <nonFilteredFileExtension>woff</nonFilteredFileExtension>
                            <nonFilteredFileExtension>woff2</nonFilteredFileExtension>
                            <nonFilteredFileExtension>svg</nonFilteredFileExtension>
                            <nonFilteredFileExtension>eot</nonFilteredFileExtension>
                            <nonFilteredFileExtension>png</nonFilteredFileExtension>
                            <nonFilteredFileExtension>js</nonFilteredFileExtension>
                        </nonFilteredFileExtensions>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M7</version>
                    <configuration>
                        <argLine>
                            --add-exports java.base/java.nio.file=ALL-UNNAMED
                        </argLine>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>3.4.0</version>
                    <configuration>
                        <from>
                            <image>${docker.base.image}:${docker.base.image.version}</image>
                        </from>
                        <to>
                            <image>${docker.image.prefix}/${docker.service.prefix}-${project.artifactId}</image>
                            <tags>
                                <!--<tag>${project.version}</tag>-->
                                <tag>${project.version}${deploy.env}</tag> 
                            </tags>
                        </to>
                        <container>
                            <jvmFlags>
                                <jvmFlag>-Djava.security.egd=file:/dev/./urandom</jvmFlag>
                            </jvmFlags>
                            <ports>
                                <port>${app.port}</port>
                            </ports>
                            <volumes>
                                <volume>/tmp</volume>
                            </volumes>
                            <!--<user>1000:1000</user>-->
                            <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
                        </container>
                        <skip>true</skip>
                        <allowInsecureRegistries>false</allowInsecureRegistries>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>buildnumber-maven-plugin</artifactId>
                    <version>1.4</version>
                    <executions>
                        <execution>
                            <phase>validate</phase>
                            <goals>
                                <goal>create</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <doCheck>false</doCheck>
                        <doUpdate>false</doUpdate>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.2.2</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                            <manifestEntries>
                                <Implementation-Build>${buildNumber}</Implementation-Build>
                                <Commit>${buildNumber}</Commit>
                                <Branch>${scmBranch}</Branch>
                                <Build-Time>${maven.build.timestamp}</Build-Time>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <!--compiler-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <release>${java.version}</release>
                    <!-- <source>${java.version}</source>
                    <target>${java.version}</target> -->
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <compilerArgs>
                        <arg>--add-opens</arg>
                        <arg>java.base/java.nio.file=ALL-UNNAMED</arg>
                        <arg>--add-opens</arg>
                        <arg>java.base/java.net=ALL-UNNAMED</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
    
    <profiles>
        <profile>
            <id>lh-prod</id>
            <properties>
                <deploy.env></deploy.env>
            </properties>
        </profile>
        <profile>
            <id>lh-integ</id>
            <properties>
                <deploy.env>-integ</deploy.env>
            </properties>
        </profile>
        <profile>
            <id>lh-dev</id>
            <properties>
                <db.url>jdbc:h2:./lipidhome;INIT=set schema lipidhome\;MODE=MySQL</db.url>
                <db.user>sa</db.user>
                <db.password></db.password>
                <arangodb.host>localhost</arangodb.host>
                <arangodb.port>8529</arangodb.port>
                <arangodb.user>root</arangodb.user>
                <arangodb.password>opensesame</arangodb.password>
                <arangodb.timeout>0</arangodb.timeout>
                <arangodb.useSsl>false</arangodb.useSsl>
                <spring.profiles.active>dev</spring.profiles.active>
                <spring-boot.run.profiles>dev</spring-boot.run.profiles>
                <!-- defaults for development environment -->
                <!-- do not use for production deployments -->
                <KEYCLOAK_CLIENT_SECRET>yAfrZMHBh0OOaA5eQVYszTepEI9bJeF1</KEYCLOAK_CLIENT_SECRET>
                <KEYCLOAK_REALM_URI>http://localhost:28080/auth/realms/lifs</KEYCLOAK_REALM_URI>
                <ARANGODB_PASSWORD>As78ACS0asK</ARANGODB_PASSWORD>
                <LIPIDCOMPASS_SYSTEM_USER_PASSWORD>testuser</LIPIDCOMPASS_SYSTEM_USER_PASSWORD>
                <LIPIDCOMPASS_SYSTEM_ADMIN_PASSWORD>testadmin</LIPIDCOMPASS_SYSTEM_ADMIN_PASSWORD>
                <BATCH_DATABASE_USER>sa</BATCH_DATABASE_USER>
                <BATCH_DATABASE_PASSWORD>sa</BATCH_DATABASE_PASSWORD>
                <MINIO_MAX_FILE_SIZE>10292823</MINIO_MAX_FILE_SIZE>
                <MINIO_ENDPOINT>http://127.0.0.1</MINIO_ENDPOINT>
                <MINIO_ACCESS_KEY>minio</MINIO_ACCESS_KEY>
                <MINIO_SECRET_KEY>minio1234567</MINIO_SECRET_KEY>
            </properties>
        </profile>
        <profile>
            <!-- activate this profile to generate OpenAPI descriptions of the REST backend services and generate typescript angular code for the frontend -->
            <id>generate-openapi-frontend-services</id>
            <build></build>
        </profile>
        <profile>
            <id>debug</id>
            <build>
                <finalName>${project.artifactId}-${project.version}</finalName>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                    </resource>
                </resources>

                <plugins>
                    <!--compiler-->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.10.1</version>
                        <configuration>
                            <source>${java.version}</source>
                            <target>${java.version}</target>
                            <annotationProcessorPaths>
                                <path>
                                    <groupId>org.projectlombok</groupId>
                                    <artifactId>lombok</artifactId>
                                    <version>${lombok.version}</version>
                                </path>
                            </annotationProcessorPaths>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <excludeDevtools>false</excludeDevtools>
                            <jvmArguments>
                                -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005
                            </jvmArguments>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>build-info</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker-local</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>repackage</id>
                                <goals>
                                    <goal>repackage</goal>
                                </goals>
                                <configuration>
                                    <skip>${skip.docker}</skip>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>docker-build</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>dockerBuild</goal>
                                </goals>
                                <configuration>
                                    <skip>${skip.docker}</skip>
                                </configuration>
                            </execution>
                        </executions>
                       
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <!--<version>${spring.boot.version}</version>-->
                        <executions>
                            <execution>
                                <id>repackage</id>
                                <goals>
                                    <goal>repackage</goal>
                                </goals>
                                <configuration>
                                    <skip>${skip.docker}</skip>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>docker-push</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <configuration>
                                    <skip>${skip.docker}</skip>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-netflix-dependencies</artifactId>
                <version>${spring-cloud-netflix.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.keycloak.bom</groupId>
                <artifactId>keycloak-adapter-bom</artifactId>
                <version>${keycloak.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi</artifactId>
                <version>${springdoc.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-jersey</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-jetty</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-jdbc</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-devtools</artifactId>
                <version>${spring.boot.version}</version>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.junit.vintage</groupId>
                        <artifactId>junit-vintage-engine</artifactId>
                    </exclusion>
                </exclusions>
                <version>${spring.boot.version}</version>
            </dependency>
            
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-params</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.vintage</groupId>
                <artifactId>junit-vintage-engine</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <type>jar</type>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>2.10.1</version>
            </dependency>

            <!-- Logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>2.0.16</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>2.0.7</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>2.0.16</version>
            </dependency>
            <!--            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>swagger-ui</artifactId>
                <version>3.52.5</version>
            </dependency>-->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>5.2.3</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.jettison</groupId>
                <artifactId>jettison</artifactId>
                <version>1.5.4</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>org.openscience.cdk</groupId>
                <artifactId>cdk-bundle</artifactId>
                <version>${cdk.version}</version>
            </dependency>
            <dependency>
                <groupId>de.isas.mztab</groupId>
                <artifactId>jmztabm-api</artifactId>
                <version>${jmztabm.version}</version>
            </dependency>
            <dependency>
                <groupId>de.isas.mztab</groupId>
                <artifactId>jmztabm-io</artifactId>
                <version>${jmztabm.version}</version>
            </dependency>
            <dependency>
                <groupId>de.isas.mztab</groupId>
                <artifactId>jmztabm-validation</artifactId>
                <version>${jmztabm.version}</version>
            </dependency>
            <dependency>
                <groupId>org.lifs-tools</groupId>
                <artifactId>jgoslin-parsers</artifactId>
                <version>${jgoslin.version}</version>
            </dependency>
            <dependency>
                <groupId>org.lifs-tools</groupId>
                <artifactId>lipidspace-api</artifactId>
                <version>${lipidspace.version}</version>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.minio</groupId>
                <artifactId>minio</artifactId>
                <version>${minio.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webflux-ui</artifactId>
                <version>${springdoc.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-common</artifactId>
                <version>${springdoc.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-api</artifactId>
                <version>${springdoc.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webflux-api</artifactId>
                <version>${springdoc.version}</version>
            </dependency>
<!--            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-data-rest</artifactId>
                <version>${springdoc.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-hateoas</artifactId>
                <version>${springdoc.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-security</artifactId>
                <version>${springdoc.version}</version>
            </dependency>-->
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger-core.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>2.3.1</version>
            </dependency>
            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>javax.annotation-api</artifactId>
                <version>1.3.2</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <description>Lipid Compass Parent Project</description>
</project>
