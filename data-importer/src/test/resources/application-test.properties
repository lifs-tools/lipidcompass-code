# 
# Copyright 2021 The LipidCompass Developers.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# 
spring.aop.proxy-target-class=true
server.servlet.contextPath=/lcdataimport
eureka.client.serviceUrl.defaultZone=${EUREKA_URI:http://localhost:28092/eureka}
eureka.instance.preferIpAddress=true
#eureka.instance.statusPageUrlPath=${server.servlet.contextPath}${management.endpoints.web.base-path}/info
#eureka.instance.healthCheckUrlPath=${server.servlet.contextPath}${management.endpoints.web.base-path}/health
eureka.instance.homePageUrlPath=${server.servlet.contextPath}
logging.level.org.springframework=INFO
logging.level.de.isas.lipidomics.palinom=WARN
logging.level.de.isas.lipidomics.palinom.sumformula=OFF
logging.level.de.isas.lipidcompass.backend.audit=INFO
logging.level.de.isas.lipidcompass.batch=INFO
logging.level.de.isas.lipidcompass.batch.data.importer.swisslipids=INFO
logging.level.de.isas.lipidcompass.batch.data.importer.utilities=INFO

spring.batch.job.enabled=false
swissLipids.import.dir=/var/data/lipidcompass/import/external/SwissLipids
lipidMaps.import.dir=/var/data/lipidcompass/import/external/LipidMaps
lipidMaps.import.chunksize=5000
mzTab.import.dir=/var/data/lipidcompass/import/submissions
server.port=8088
batch.config.package.javaconfig=de.isas.lipidcompass.batch.jobs
spring.application.name=lipidcompass-data-importer

arangodb.host=127.0.0.1
arangodb.port=${ARANGODB_PORT:28091}
arangodb.timeout=5000
arangodb.user=${ARANGODB_USER:root}
# docker secret lipidcompass_dev_infra_arangodb needs to exist locally
arangodb.password=${ARANGODB_PASSWORD} 
arangodb.useSsl=${ARANGODB_USE_SSL}
arangodb.database=lipidcompass-dev
arangodb.truncate=false

spring.h2.console.enabled=true
spring.h2.console.path=/h2
# Datasource
spring.datasource.url=jdbc:h2:file:${BATCH_DATABASE_DIR:~/lipid-compass-data-importer-h2-db}
spring.datasource.username=${BATCH_DATABASE_USER:sa}
spring.datasource.password=${BATCH_DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.h2.Driver
spring.jpa.hibernate.ddl-auto=update

spring.data.solr.host=${SOLR_URI:http://127.0.0.1:8983/solr,http://127.0.0.1:8984/solr}
spring.data.solr.zk-host=${ZK_HOST:127.0.0.1:28181}
solr.import.chunksize=10000
solr.backupLocation=/var/solr/backup
# use CLOUD to switch to distributed solr, STANDALONE for single node mode
solr.mode=CLOUD
solr.collections=lc-lipid-quantities,lc-lipidmaps,lc-lipids,lc-mztab,lc-swisslipids
solr.host=${SOLR_URI:http://localhost:28093/solr}
solr.mztab.core=${SOLR_MZTAB_CORE:lc-mztab}
solr.lipids.core=${SOLR_LIPIDS_CORE:lc-lipids}
solr.lipidmaps.core=${SOLR_LIPIDMAPS_CORE:lc-lipidmaps}
solr.swisslipids.core=${SOLR_SWISSLIPIDS_CORE:lc-swisslipids}
solr.lipidquantities.core=${SOLR_LIPIDQUANTITIES_CORE:lc-lipid-quantities}

spring.security.oauth2.client.registration.keycloak.client-id=lipidcompass
spring.security.oauth2.client.registration.keycloak.client-secret=${KEYCLOAK_CLIENT_SECRET}
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email


# https://medium.com/@hantsy/secures-your-application-with-spring-security-5-and-keycloak-2804ee912b0f and https://github.com/hantsy/keycloak-springsecurity5-sample
spring.security.oauth2.client.provider.keycloak.authorization-uri=https://lifs-tools.org/auth/realms/lifs/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=https://lifs-tools.org/auth/realms/lifs/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.user-info-uri=https://lifs-tools.org/auth/realms/lifs/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=https://lifs-tools.org/auth/realms/lifs/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

# settings for oauth2 resourcesserver (https://docs.spring.io/spring-security/site/docs/current/reference/html5/#oauth2resourceserver-jwt-jwkseturi)
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://lifs-tools.org/auth/realms/lifs
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://lifs-tools.org/auth/realms/lifs/protocol/openid-connect/certs
