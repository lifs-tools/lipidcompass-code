<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.lipidcompass</groupId>
        <artifactId>lipidcompass</artifactId>
        <version>1.0.13-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <artifactId>backend</artifactId>
    <packaging>jar</packaging>
    <name>Lipid Compass Backend</name>
    <properties>
        <app.port>8081</app.port>
        <netbeans.hint.license>apache20</netbeans.hint.license>
        <skip.docker>false</skip.docker>
        <start-class>org.lipidcompass.backend.Application</start-class>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>com.arangodb</groupId>
            <artifactId>arangodb-spring-data</artifactId>
            <version>${arangodb.data.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <artifactId>cdk-bundle</artifactId>
            <groupId>org.openscience.cdk</groupId>
        </dependency>
        <dependency>
            <groupId>de.isas.mztab</groupId>
            <artifactId>jmztabm-validation</artifactId>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
    
        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-hateoas</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>model</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>mztab-dbmodel</artifactId>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.data</groupId>
                    <artifactId>spring-data-solr</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>backend-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>service-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.lifs-tools</groupId>
            <artifactId>lipidspace-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.retry</groupId>
            <artifactId>spring-retry</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.minio</groupId>
            <artifactId>minio</artifactId>
        </dependency>
        <!--        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4-runtime</artifactId>
            <version>4.7.2</version>
            <scope>runtime</scope>
        </dependency>-->
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>4.10.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.ben-manes.caffeine</groupId>
            <artifactId>caffeine</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-rest-webmvc</artifactId>
            <type>jar</type>
        </dependency>
<!--        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-webmvc-core</artifactId>
        </dependency>-->
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math3</artifactId>
            <version>3.6.1</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>tech.tablesaw</groupId>
            <artifactId>tablesaw-core</artifactId>
            <version>0.43.1</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
    </dependencies>
    <profiles>
        <profile>
            <id>drop-database</id>
            <properties>
                <arangodb.drop-database>true</arangodb.drop-database>
            </properties>
        </profile>
        <profile>
            <id>lh-dev</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>build-info</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <profiles>dev</profiles>
                            <environmentVariables>
                                <KEYCLOAK_CLIENT_SECRET>${KEYCLOAK_CLIENT_SECRET}</KEYCLOAK_CLIENT_SECRET>
                                <KEYCLOAK_REALM_URI>${KEYCLOAK_REALM_URI}</KEYCLOAK_REALM_URI>
                                <ARANGODB_PASSWORD>${ARANGODB_PASSWORD}</ARANGODB_PASSWORD>
                                <ARANGODB_DROP>${arangodb.drop-database}</ARANGODB_DROP>
                                <LIPIDCOMPASS_SYSTEM_USER_PASSWORD>${LIPIDCOMPASS_SYSTEM_USER_PASSWORD}</LIPIDCOMPASS_SYSTEM_USER_PASSWORD>
                                <LIPIDCOMPASS_SYSTEM_ADMIN_PASSWORD>${LIPIDCOMPASS_SYSTEM_ADMIN_PASSWORD}</LIPIDCOMPASS_SYSTEM_ADMIN_PASSWORD>
                                <MINIO_ENDPOINT>${MINIO_ENDPOINT}</MINIO_ENDPOINT>
                                <MINIO_ACCESS_KEY>${MINIO_ACCESS_KEY}</MINIO_ACCESS_KEY>
                                <MINIO_SECRET_KEY>${MINIO_SECRET_KEY}</MINIO_SECRET_KEY>
                            </environmentVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <configuration>
                            <skip>${skip.docker}</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>generate-openapi-frontend-services</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>reserve-network-port</id>
                                <goals>
                                    <goal>reserve-network-port</goal>
                                </goals>
                                <phase>process-resources</phase>
                                <configuration>
                                    <portNames>
                                        <portName>random.jmx.port</portName>
                                    </portNames>
                                    <randomPort>true</randomPort>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>pre-integration-test</id>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>post-integration-test</id>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <jmxPort>${random.jmx.port}</jmxPort>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.springdoc</groupId>
                        <artifactId>springdoc-openapi-maven-plugin</artifactId>
                        <version>1.4</version>
                        <executions>
                            <execution>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration> 
                            <apiDocsUrl>http://localhost:${app.port}/v3/api-docs.yaml</apiDocsUrl> 
                            <outputFileName>${project.parent.artifactId}-${project.artifactId}-api.yml</outputFileName> 
                            <outputDir>${project.basedir}/src/main/resources/api/</outputDir> 
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.openapitools</groupId>
                        <artifactId>openapi-generator-maven-plugin</artifactId>
                        <!-- RELEASE_VERSION -->
                        <version>7.2.0</version>
                        <!-- /RELEASE_VERSION -->
                        <executions>
                            <execution>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                                <configuration>
                                    <inputSpec>${project.basedir}/src/main/resources/api/${project.parent.artifactId}-${project.artifactId}-api.yml</inputSpec>
                                    <generatorName>typescript-angular</generatorName>
                                    <output>${project.basedir}/../ui/src/main/angular/ui/modules/${project.parent.artifactId}-${project.artifactId}-client</output>
                                    <!-- disable operationId check -->
                                    <skipValidateSpec>true</skipValidateSpec>
                                    <configOptions>
                                        <!--                                <sourceFolder>src/main/java</sourceFolder>-->
                                        <apiModulePrefix>LipidCompassBackend</apiModulePrefix>
                                        <configurationPrefix>LipidCompassBackend</configurationPrefix>
                                        <enumUnknownDefaultCase>true</enumUnknownDefaultCase>
                                        <enumPropertyNaming>original</enumPropertyNaming>
                                        <ngVersion>17.0.9</ngVersion>
                                        <npmName>${project.name}-client</npmName>
                                        <npmVersion>${project.version}</npmVersion>
                                        <npmAuthor>Nils Hoffmann</npmAuthor>
                                        <!--<basePackage>org.lipidcompass.backend.rest</basePackage>-->
                                        <legacyDiscriminatorBehavior>false</legacyDiscriminatorBehavior>
                                    </configOptions>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <!--        <plugins>
            <plugin>
                <groupId>cz.habarta.typescript-generator</groupId>
                <artifactId>typescript-generator-maven-plugin</artifactId>
                <configuration>
                    <generateSpringApplicationClient>true</generateSpringApplicationClient>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>cz.habarta.typescript-generator</groupId>
                        <artifactId>typescript-generator-spring</artifactId>
                        <version>${typescript-generator.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>-->
    </build>
</project>
