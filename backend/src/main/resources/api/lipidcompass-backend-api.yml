openapi: 3.0.1
info:
  title: LipidCompass Backend API
  version: "1"
servers:
- url: http://localhost:8081
  description: Generated server url
security:
- BearerAuth: []
- OpenID: []
- OAuth2: []
paths:
  /swisslipids/save:
    post:
      tags:
      - swiss-lipids-entry-controller
      operationId: saveSingle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SwissLipidsEntry'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelSwissLipidsEntry'
  /swisslipids/saveAll:
    post:
      tags:
      - swiss-lipids-entry-controller
      operationId: saveAll
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SwissLipidsEntry'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelSwissLipidsEntry'
  /swisslipids/query:
    post:
      tags:
      - swiss-lipids-entry-controller
      operationId: querySwissLipidsEntries
      parameters:
      - name: normalizedName
        in: query
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelSwissLipidsEntry'
  /swisslipids/findOneByExample:
    post:
      tags:
      - swiss-lipids-entry-controller
      operationId: findOneByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SwissLipidsEntry'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelSwissLipidsEntry'
  /swisslipids/countByExample:
    post:
      tags:
      - swiss-lipids-entry-controller
      operationId: countByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SwissLipidsEntry'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /submission/{submissionId}/file:
    get:
      tags:
      - submission-controller
      operationId: getFile
      parameters:
      - name: submissionId
        in: path
        required: true
        schema:
          type: string
      - name: fileResource
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/FileResource'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: string
                format: binary
    post:
      tags:
      - submission-controller
      operationId: upload
      parameters:
      - name: submissionId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelSubmission'
    delete:
      tags:
      - submission-controller
      operationId: deleteFile
      parameters:
      - name: submissionId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileResource'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelSubmission'
  /submission/{submissionId}/file/validate:
    post:
      tags:
      - submission-controller
      operationId: validateMzTabFile
      parameters:
      - name: submissionId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileResource'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelValidationMessage'
  /submission/save:
    post:
      tags:
      - submission-controller
      operationId: saveSingle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Submission'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelSubmission'
  /submission/saveAll:
    post:
      tags:
      - submission-controller
      operationId: saveAll
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Submission'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelSubmission'
  /submission/query:
    post:
      tags:
      - submission-controller
      operationId: queryUserSubmissions
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelSubmission'
  /submission/findOneByExample:
    post:
      tags:
      - submission-controller
      operationId: findOneByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Submission'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelSubmission'
  /submission/countByExample:
    post:
      tags:
      - submission-controller
      operationId: countByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Submission'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /study/save:
    post:
      tags:
      - study-controller
      operationId: saveSingle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Study'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelStudy'
  /study/saveAll:
    post:
      tags:
      - study-controller
      operationId: saveAll
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Study'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelStudy'
  /study/findOneByExample:
    post:
      tags:
      - study-controller
      operationId: findOneByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Study'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelStudy'
  /study/findByUserName:
    post:
      tags:
      - study-controller
      operationId: findByUserName
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelStudy'
  /study/countByExample:
    post:
      tags:
      - study-controller
      operationId: countByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Study'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /mztab/save:
    post:
      tags:
      - mz-tab-result-controller
      operationId: saveSingle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MzTabResult'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelMzTabResult'
  /mztab/saveAll:
    post:
      tags:
      - mz-tab-result-controller
      operationId: saveAll
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MzTabResult'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelMzTabResult'
  /mztab/query:
    get:
      tags:
      - mz-tab-result-controller
      operationId: getQuery
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLipidCompassQuery'
    post:
      tags:
      - mz-tab-result-controller
      operationId: postQuery
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LipidCompassQuery'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelMzTabResult'
  /mztab/findOneByExample:
    post:
      tags:
      - mz-tab-result-controller
      operationId: findOneByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MzTabResult'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelMzTabResult'
  /mztab/facets:
    post:
      tags:
      - mz-tab-result-controller
      operationId: getFacets
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CvParameterFacet'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelCvParameterFacet'
  /mztab/countByExample:
    post:
      tags:
      - mz-tab-result-controller
      operationId: countByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MzTabResult'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /lipidspace/compare:
    post:
      tags:
      - lipid-space-controller
      operationId: compare
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LipidSpaceQueryDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLipidSpacePcaResponse'
  /lipidquantity/save:
    post:
      tags:
      - lipid-quantity-controller
      operationId: saveSingle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LipidQuantity'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLipidQuantity'
  /lipidquantity/saveAll:
    post:
      tags:
      - lipid-quantity-controller
      operationId: saveAll
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LipidQuantity'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelLipidQuantity'
  /lipidquantity/plot/findSummaryStatsGroupedByLipid:
    post:
      tags:
      - plottable-lipid-quantity-controller
      operationId: findLipidSummaryStatsGroupedByLipid
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LipidCompassQuery'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagePlottableLipidSummaryStats'
  /lipidquantity/plot/findLipidQuantityTableByMzTabResultIdsAndNormalizedShorthandName:
    post:
      tags:
      - plottable-lipid-quantity-controller
      operationId: findLipidQuantityTableByMzTabResultIdsAndNormalizedShorthandName
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          minimum: 1
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LipidCompassQuery'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PageLipidQuantityDatasetAssayTableRow'
  /lipidquantity/plot/findGroupedByLipid:
    post:
      tags:
      - plottable-lipid-quantity-controller
      operationId: findLipidQuantitiesGroupedByLipid
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LipidCompassQuery'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagePlottableLipidQuantity'
  /lipidquantity/findOneByExample:
    post:
      tags:
      - lipid-quantity-controller
      operationId: findOneByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LipidQuantity'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLipidQuantity'
  /lipidquantity/findByLipidQuery:
    post:
      tags:
      - lipid-quantity-controller
      operationId: findByLipidQuery
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LipidCompassQuery'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelLipidQuantity'
  /lipidquantity/countByExample:
    post:
      tags:
      - lipid-quantity-controller
      operationId: countByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LipidQuantity'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /lipidmaps/save:
    post:
      tags:
      - lipid-maps-entry-controller
      operationId: saveSingle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LipidMapsEntry'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLipidMapsEntry'
  /lipidmaps/saveAll:
    post:
      tags:
      - lipid-maps-entry-controller
      operationId: saveAll
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LipidMapsEntry'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelLipidMapsEntry'
  /lipidmaps/query:
    post:
      tags:
      - lipid-maps-entry-controller
      operationId: queryLipidMapsEntries
      parameters:
      - name: normalizedName
        in: query
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelLipidMapsEntry'
  /lipidmaps/findOneByExample:
    post:
      tags:
      - lipid-maps-entry-controller
      operationId: findOneByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LipidMapsEntry'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLipidMapsEntry'
  /lipidmaps/countByExample:
    post:
      tags:
      - lipid-maps-entry-controller
      operationId: countByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LipidMapsEntry'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /lipid/save:
    post:
      tags:
      - lipid-controller
      operationId: saveSingle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lipid'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLipid'
  /lipid/saveAll:
    post:
      tags:
      - lipid-controller
      operationId: saveAll
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Lipid'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelLipid'
  /lipid/nameAtLevel:
    post:
      tags:
      - lipid-controller
      operationId: getLipidNameAtLevel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LipidCompassQuery'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelString'
  /lipid/levels:
    get:
      tags:
      - lipid-controller
      operationId: getLipidLevels
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelLipidLevel'
    post:
      tags:
      - lipid-controller
      operationId: getLipidCategoriesForLevel
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelLipid'
  /lipid/findOneByExample:
    post:
      tags:
      - lipid-controller
      operationId: findOneByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lipid'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLipid'
  /lipid/findByLipidQuery:
    post:
      tags:
      - lipid-controller
      operationId: findByLipidQuery
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LipidCompassQuery'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelLipid'
  /lipid/countByExample:
    post:
      tags:
      - lipid-controller
      operationId: countByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lipid'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /lipid/annotateWithSwissLipidsSmiles:
    post:
      tags:
      - lipid-controller
      operationId: annotateWithSwissLipidsSmiles
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: string
  /hasMzTabResult/save:
    post:
      tags:
      - has-mz-tab-result-controller
      operationId: saveSingle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HasMzTabResult'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelHasMzTabResult'
  /hasMzTabResult/saveAll:
    post:
      tags:
      - has-mz-tab-result-controller
      operationId: saveAll
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/HasMzTabResult'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelHasMzTabResult'
  /hasMzTabResult/findOneByExample:
    post:
      tags:
      - has-mz-tab-result-controller
      operationId: findOneByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HasMzTabResult'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelHasMzTabResult'
  /hasMzTabResult/countByExample:
    post:
      tags:
      - has-mz-tab-result-controller
      operationId: countByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HasMzTabResult'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /hasCvParent/save:
    post:
      tags:
      - has-cv-parent-controller
      operationId: saveSingle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HasCvParent'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelHasCvParent'
  /hasCvParent/saveAll:
    post:
      tags:
      - has-cv-parent-controller
      operationId: saveAll
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/HasCvParent'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelHasCvParent'
  /hasCvParent/findOneByExample:
    post:
      tags:
      - has-cv-parent-controller
      operationId: findOneByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HasCvParent'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelHasCvParent'
  /hasCvParent/countByExample:
    post:
      tags:
      - has-cv-parent-controller
      operationId: countByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HasCvParent'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /hasCvParameterReference/save:
    post:
      tags:
      - has-cv-parameter-reference-controller
      operationId: saveSingle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HasCvParameterReference'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelHasCvParameterReference'
  /hasCvParameterReference/saveAll:
    post:
      tags:
      - has-cv-parameter-reference-controller
      operationId: saveAll
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/HasCvParameterReference'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelHasCvParameterReference'
  /hasCvParameterReference/findOneByExample:
    post:
      tags:
      - has-cv-parameter-reference-controller
      operationId: findOneByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HasCvParameterReference'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelHasCvParameterReference'
  /hasCvParameterReference/countByExample:
    post:
      tags:
      - has-cv-parameter-reference-controller
      operationId: countByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HasCvParameterReference'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /hasCrossReference/save:
    post:
      tags:
      - has-cross-reference-controller
      operationId: saveSingle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HasCrossReference'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelHasCrossReference'
  /hasCrossReference/saveAll:
    post:
      tags:
      - has-cross-reference-controller
      operationId: saveAll
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/HasCrossReference'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelHasCrossReference'
  /hasCrossReference/findOneByExample:
    post:
      tags:
      - has-cross-reference-controller
      operationId: findOneByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HasCrossReference'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelHasCrossReference'
  /hasCrossReference/countByExample:
    post:
      tags:
      - has-cross-reference-controller
      operationId: countByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HasCrossReference'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /facets/save:
    post:
      tags:
      - facet-controller
      operationId: saveSingle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LipidQuantity'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLipidQuantity'
  /facets/saveAll:
    post:
      tags:
      - facet-controller
      operationId: saveAll
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LipidQuantity'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelLipidQuantity'
  /facets/findOneByExample:
    post:
      tags:
      - facet-controller
      operationId: findOneByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LipidQuantity'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLipidQuantity'
  /facets/countByExample:
    post:
      tags:
      - facet-controller
      operationId: countByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LipidQuantity'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /facets/:
    get:
      tags:
      - facet-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelLipidQuantity'
    post:
      tags:
      - facet-controller
      operationId: findByLipidQuery
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LipidCompassQuery'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelLipidQuantity'
  /cvparameter/save:
    post:
      tags:
      - cv-parameter-controller
      operationId: saveSingle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CvParameter'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCvParameter'
  /cvparameter/saveAll:
    post:
      tags:
      - cv-parameter-controller
      operationId: saveAll
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CvParameter'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelCvParameter'
  /cvparameter/findOneByExample:
    post:
      tags:
      - cv-parameter-controller
      operationId: findOneByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CvParameter'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCvParameter'
  /cvparameter/countByExample:
    post:
      tags:
      - cv-parameter-controller
      operationId: countByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CvParameter'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /cv/save:
    post:
      tags:
      - controlled-vocabulary-controller
      operationId: saveSingle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ControlledVocabulary'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelControlledVocabulary'
  /cv/saveAll:
    post:
      tags:
      - controlled-vocabulary-controller
      operationId: saveAll
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ControlledVocabulary'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelControlledVocabulary'
  /cv/findOneByExample:
    post:
      tags:
      - controlled-vocabulary-controller
      operationId: findOneByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ControlledVocabulary'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelControlledVocabulary'
  /cv/countByExample:
    post:
      tags:
      - controlled-vocabulary-controller
      operationId: countByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ControlledVocabulary'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /crossreference/save:
    post:
      tags:
      - cross-reference-controller
      operationId: saveSingle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrossReference'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCrossReference'
  /crossreference/saveAll:
    post:
      tags:
      - cross-reference-controller
      operationId: saveAll
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CrossReference'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelCrossReference'
  /crossreference/findOneByExample:
    post:
      tags:
      - cross-reference-controller
      operationId: findOneByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrossReference'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCrossReference'
  /crossreference/countByExample:
    post:
      tags:
      - cross-reference-controller
      operationId: countByExample
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrossReference'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /user/me:
    get:
      tags:
      - user-controller
      operationId: user
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
  /user/all:
    get:
      tags:
      - user-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelUser'
  /user:
    get:
      tags:
      - user-controller
      operationId: index
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RepresentationModel'
  /user/:
    get:
      tags:
      - user-controller
      operationId: index
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RepresentationModel'
  /swisslipids/{id}:
    get:
      tags:
      - swiss-lipids-entry-controller
      operationId: getById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelArangoBaseEntity'
  /swisslipids/{id}/children:
    get:
      tags:
      - swiss-lipids-entry-controller
      operationId: getChildren
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelSwissLipidsEntry'
  /swisslipids/levels:
    get:
      tags:
      - swiss-lipids-entry-controller
      operationId: getSwissLipidsEntryLevels
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelLevel'
  /swisslipids/levels/{level}:
    get:
      tags:
      - swiss-lipids-entry-controller
      operationId: getSwissLipidsEntryCategoriesForLevel
      parameters:
      - name: level
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelSwissLipidsEntry'
  /swisslipids/count:
    get:
      tags:
      - swiss-lipids-entry-controller
      operationId: count
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /swisslipids:
    get:
      tags:
      - swiss-lipids-entry-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelSwissLipidsEntry'
  /swisslipids/:
    get:
      tags:
      - swiss-lipids-entry-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelSwissLipidsEntry'
  /submission/{id}:
    get:
      tags:
      - submission-controller
      operationId: getById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelSubmission'
  /submission/count:
    get:
      tags:
      - submission-controller
      operationId: count
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /submission:
    get:
      tags:
      - submission-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelSubmission'
  /submission/:
    get:
      tags:
      - submission-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelSubmission'
  /study/{id}:
    get:
      tags:
      - study-controller
      operationId: getById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelArangoBaseEntity'
  /study/random:
    get:
      tags:
      - study-controller
      operationId: getRandom
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelStudy'
  /study/count:
    get:
      tags:
      - study-controller
      operationId: count
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /study:
    get:
      tags:
      - study-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelStudy'
  /study/:
    get:
      tags:
      - study-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelStudy'
  /stats/:
    get:
      tags:
      - stats-controller
      operationId: stats
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LipidStatsResource'
  /stats:
    get:
      tags:
      - stats-controller
      operationId: stats
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LipidStatsResource'
  /mztab/{id}:
    get:
      tags:
      - mz-tab-result-controller
      operationId: getById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelMzTabResult'
  /mztab/{id}/summary:
    get:
      tags:
      - mz-tab-result-controller
      operationId: getSml
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: pagedResourceAssembler
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/PagedResourcesAssemblerSmallMoleculeSummary'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelSmallMoleculeSummary'
  /mztab/{id}/msrun/pca:
    get:
      tags:
      - mz-tab-result-controller
      operationId: getMsRunsPca
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelMsRunsPcaResultDto'
  /mztab/{id}/metadata:
    get:
      tags:
      - mz-tab-result-controller
      operationId: getMetadata
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelMetadata'
  /mztab/{id}/feature:
    get:
      tags:
      - mz-tab-result-controller
      operationId: getSmf
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: pagedResourceAssembler
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/PagedResourcesAssemblerSmallMoleculeFeature'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelSmallMoleculeFeature'
  /mztab/{id}/evidence:
    get:
      tags:
      - mz-tab-result-controller
      operationId: getSme
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: pagedResourceAssembler
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/PagedResourcesAssemblerSmallMoleculeFeature'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelSmallMoleculeEvidence'
  /mztab/pid/{nativeId}:
    get:
      tags:
      - mz-tab-result-controller
      operationId: getByNativeId
      parameters:
      - name: nativeId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelMzTabResult'
  /mztab/count:
    get:
      tags:
      - mz-tab-result-controller
      operationId: count
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /mztab/:
    get:
      tags:
      - mz-tab-result-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelMzTabResult'
  /mztab:
    get:
      tags:
      - mz-tab-result-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelMzTabResult'
  /lipidquantity/{id}:
    get:
      tags:
      - lipid-quantity-controller
      operationId: getById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelArangoBaseEntity'
  /lipidquantity/plot/findyByMzTabResultIdAndByLipidLevel/{mzTabResultId}/{lipidLevel}:
    get:
      tags:
      - plottable-lipid-quantity-controller
      operationId: findByMzTabResultIdAndByLipidLevel
      parameters:
      - name: mzTabResultId
        in: path
        required: true
        schema:
          type: string
      - name: lipidLevel
        in: path
        required: true
        schema:
          type: string
          enum:
          - NO_LEVEL
          - UNDEFINED_LEVEL
          - CATEGORY
          - CLASS
          - SPECIES
          - MOLECULAR_SPECIES
          - SN_POSITION
          - STRUCTURE_DEFINED
          - FULL_STRUCTURE
          - COMPLETE_STRUCTURE
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SummarizedLipidDataset'
  /lipidquantity/plot/findyByLipidLevel/{lipidLevel}:
    get:
      tags:
      - plottable-lipid-quantity-controller
      operationId: findByLipidLevel
      parameters:
      - name: lipidLevel
        in: path
        required: true
        schema:
          type: string
          enum:
          - NO_LEVEL
          - UNDEFINED_LEVEL
          - CATEGORY
          - CLASS
          - SPECIES
          - MOLECULAR_SPECIES
          - SN_POSITION
          - STRUCTURE_DEFINED
          - FULL_STRUCTURE
          - COMPLETE_STRUCTURE
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SummarizedLipidStatistics'
  /lipidquantity/findMzTabResultsForLipid/{lipidId}:
    get:
      tags:
      - lipid-quantity-controller
      operationId: findMzTabResultsForLipid
      parameters:
      - name: lipidId
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: Zero-based page index (0..N)
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelMzTabResultsForLipid'
  /lipidquantity/count:
    get:
      tags:
      - lipid-quantity-controller
      operationId: count
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /lipidquantity/:
    get:
      tags:
      - lipid-quantity-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelLipidQuantity'
  /lipidquantity:
    get:
      tags:
      - lipid-quantity-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelLipidQuantity'
  /lipidmaps/{id}:
    get:
      tags:
      - lipid-maps-entry-controller
      operationId: getById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelArangoBaseEntity'
  /lipidmaps/{id}/lipidsForLevel:
    get:
      tags:
      - lipid-maps-entry-controller
      operationId: getLipidsForLipidMapsLevel
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelLipid'
  /lipidmaps/{id}/children:
    get:
      tags:
      - lipid-maps-entry-controller
      operationId: getChildren
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      - name: pagedResourcesAssembler
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/PagedResourcesAssemblerLipidMapsEntry'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelLipidMapsEntry'
  /lipidmaps/levels:
    get:
      tags:
      - lipid-maps-entry-controller
      operationId: getLipidMapsEntryLevels
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelLevel'
  /lipidmaps/levels/{level}:
    get:
      tags:
      - lipid-maps-entry-controller
      operationId: getLipidMapsCategoriesForLevel
      parameters:
      - name: level
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelLipidMapsEntry'
  /lipidmaps/count:
    get:
      tags:
      - lipid-maps-entry-controller
      operationId: count
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /lipidmaps:
    get:
      tags:
      - lipid-maps-entry-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelLipidMapsEntry'
  /lipidmaps/:
    get:
      tags:
      - lipid-maps-entry-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelLipidMapsEntry'
  /lipid/{id}:
    get:
      tags:
      - lipid-controller
      operationId: getById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelArangoBaseEntity'
  /lipid/{id}/svg:
    get:
      tags:
      - lipid-controller
      operationId: getSmilesSvg
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLipidSvg'
  /lipid/table:
    get:
      tags:
      - lipid-controller
      operationId: getLipidsAsTable
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: string
                format: binary
  /lipid/random:
    get:
      tags:
      - lipid-controller
      operationId: getRandom
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLipid'
  /lipid/count:
    get:
      tags:
      - lipid-controller
      operationId: count
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /lipid:
    get:
      tags:
      - lipid-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelLipid'
  /lipid/:
    get:
      tags:
      - lipid-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelLipid'
  /hasMzTabResult/{id}:
    get:
      tags:
      - has-mz-tab-result-controller
      operationId: getById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelArangoBaseEntity'
  /hasMzTabResult/count:
    get:
      tags:
      - has-mz-tab-result-controller
      operationId: count
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /hasMzTabResult:
    get:
      tags:
      - has-mz-tab-result-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelHasMzTabResult'
  /hasMzTabResult/:
    get:
      tags:
      - has-mz-tab-result-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelHasMzTabResult'
  /hasCvParent/{id}:
    get:
      tags:
      - has-cv-parent-controller
      operationId: getById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelArangoBaseEntity'
  /hasCvParent/count:
    get:
      tags:
      - has-cv-parent-controller
      operationId: count
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /hasCvParent/:
    get:
      tags:
      - has-cv-parent-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelHasCvParent'
  /hasCvParent:
    get:
      tags:
      - has-cv-parent-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelHasCvParent'
  /hasCvParameterReference/{id}:
    get:
      tags:
      - has-cv-parameter-reference-controller
      operationId: getById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelArangoBaseEntity'
  /hasCvParameterReference/count:
    get:
      tags:
      - has-cv-parameter-reference-controller
      operationId: count
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /hasCvParameterReference/:
    get:
      tags:
      - has-cv-parameter-reference-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelHasCvParameterReference'
  /hasCvParameterReference:
    get:
      tags:
      - has-cv-parameter-reference-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelHasCvParameterReference'
  /hasCrossReference/{id}:
    get:
      tags:
      - has-cross-reference-controller
      operationId: getById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelArangoBaseEntity'
  /hasCrossReference/count:
    get:
      tags:
      - has-cross-reference-controller
      operationId: count
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /hasCrossReference/:
    get:
      tags:
      - has-cross-reference-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelHasCrossReference'
  /hasCrossReference:
    get:
      tags:
      - has-cross-reference-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelHasCrossReference'
  /facets/{id}:
    get:
      tags:
      - facet-controller
      operationId: getById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelArangoBaseEntity'
  /facets/findMzTabResultsForLipid/{lipidId}:
    get:
      tags:
      - facet-controller
      operationId: findMzTabResultsForLipid
      parameters:
      - name: lipidId
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: Zero-based page index (0..N)
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelMzTabResultsForLipid'
  /facets/count:
    get:
      tags:
      - facet-controller
      operationId: count
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /facets:
    get:
      tags:
      - facet-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelLipidQuantity'
  /cvparameter/{id}:
    get:
      tags:
      - cv-parameter-controller
      operationId: getById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelArangoBaseEntity'
  /cvparameter/grouped:
    get:
      tags:
      - cv-parameter-controller
      operationId: getGrouped
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelGroupedCvParameters'
  /cvparameter/findByReferenceType/{referenceType}:
    get:
      tags:
      - cv-parameter-controller
      operationId: findByName
      parameters:
      - name: referenceType
        in: path
        required: true
        schema:
          type: string
          enum:
          - BEST_ID_CONFIDENCE_MEASURE
          - SMALL_MOLECULE_QUANTIFICATION_UNIT
          - SAMPLE_DISEASE
          - SAMPLE_CELLTYPE
          - SAMPLE_ORGANISM
          - SAMPLE_TISSUE
          - SAMPLE_CUSTOM
          - ASSAY_CUSTOM
          - MS_RUN_FORMAT
          - MS_RUN_HASH_METHOD
          - MS_RUN_ID_FORMAT
          - MS_RUN_FRAGMENTATION_METHOD
          - MS_RUN_SCAN_POLARITY
          - STUDY_VARIABLE_FACTOR
          - INSTRUMENT_ANALYZER
          - INSTRUMENT_DETECTOR
          - INSTRUMENT_NAME
          - INSTRUMENT_SOURCE
          - UNSPECIFIED
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCvParameter'
  /cvparameter/findByName/{name}:
    get:
      tags:
      - cv-parameter-controller
      operationId: findByName
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCvParameter'
  /cvparameter/findByAccession/{accession}:
    get:
      tags:
      - cv-parameter-controller
      operationId: findByAccession
      parameters:
      - name: accession
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCvParameter'
  /cvparameter/count:
    get:
      tags:
      - cv-parameter-controller
      operationId: count
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /cvparameter:
    get:
      tags:
      - cv-parameter-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCvParameter'
  /cvparameter/:
    get:
      tags:
      - cv-parameter-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCvParameter'
  /cv/{id}:
    get:
      tags:
      - controlled-vocabulary-controller
      operationId: getById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelArangoBaseEntity'
  /cv/findByLabel/{label}:
    get:
      tags:
      - controlled-vocabulary-controller
      operationId: findByNativeId
      parameters:
      - name: label
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelControlledVocabulary'
  /cv/count:
    get:
      tags:
      - controlled-vocabulary-controller
      operationId: count
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /cv:
    get:
      tags:
      - controlled-vocabulary-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelControlledVocabulary'
  /cv/:
    get:
      tags:
      - controlled-vocabulary-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelControlledVocabulary'
  /crossreference/{id}:
    get:
      tags:
      - cross-reference-controller
      operationId: getById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelArangoBaseEntity'
  /crossreference/findByNativeId/{nativeId}:
    get:
      tags:
      - cross-reference-controller
      operationId: findByNativeId
      parameters:
      - name: nativeId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCrossReference'
  /crossreference/count:
    get:
      tags:
      - cross-reference-controller
      operationId: count
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: integer
                format: int64
  /crossreference:
    get:
      tags:
      - cross-reference-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCrossReference'
  /crossreference/:
    get:
      tags:
      - cross-reference-controller
      operationId: get
      parameters:
      - name: page
        in: query
        description: Zero-based page index (0..N)
        required: false
        schema:
          type: integer
          default: 0
      - name: size
        in: query
        description: The size of the page to be returned
        required: false
        schema:
          type: integer
          default: 20
      - name: sort
        in: query
        description: "Sorting criteria in the format: property,(asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelCrossReference'
  /:
    get:
      tags:
      - index-controller
      operationId: index
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RepresentationModel'
  /swisslipids/delete/{id}:
    delete:
      tags:
      - swiss-lipids-entry-controller
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /submission/delete/{id}:
    delete:
      tags:
      - submission-controller
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /study/delete/{id}:
    delete:
      tags:
      - study-controller
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /mztab/delete/{id}:
    delete:
      tags:
      - mz-tab-result-controller
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /lipidquantity/delete/{id}:
    delete:
      tags:
      - lipid-quantity-controller
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /lipidmaps/delete/{id}:
    delete:
      tags:
      - lipid-maps-entry-controller
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /lipid/delete/{id}:
    delete:
      tags:
      - lipid-controller
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /hasMzTabResult/delete/{id}:
    delete:
      tags:
      - has-mz-tab-result-controller
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /hasCvParent/delete/{id}:
    delete:
      tags:
      - has-cv-parent-controller
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /hasCvParameterReference/delete/{id}:
    delete:
      tags:
      - has-cv-parameter-reference-controller
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /hasCrossReference/delete/{id}:
    delete:
      tags:
      - has-cross-reference-controller
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /facets/delete/{id}:
    delete:
      tags:
      - facet-controller
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /cvparameter/delete/{id}:
    delete:
      tags:
      - cv-parameter-controller
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /cv/delete/{id}:
    delete:
      tags:
      - controlled-vocabulary-controller
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
  /crossreference/delete/{id}:
    delete:
      tags:
      - cross-reference-controller
      operationId: deleteById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: object
components:
  schemas:
    ArangoBaseEntity:
      required:
      - transactionUuid
      type: object
      properties:
        id:
          type: string
        arangoId:
          type: string
        transactionUuid:
          type: string
        visibility:
          type: string
          enum:
          - PRIVATE
          - RESTRICTED
          - PUBLIC
        revision:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateLastModified:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
    CrossReference:
      required:
      - transactionUuid
      type: object
      allOf:
      - $ref: '#/components/schemas/ArangoBaseEntity'
      - type: object
        properties:
          id:
            type: string
          arangoId:
            type: string
          transactionUuid:
            type: string
          visibility:
            type: string
            enum:
            - PRIVATE
            - RESTRICTED
            - PUBLIC
          crossReferenceType:
            type: string
            enum:
            - LIPIDMAPS_ID
            - SWISSLIPIDS_ID
            - LIPIDCOMPASS_EXPERIMENT_ID
            - LIPIDBANK_ID
            - PUBCHEM_SID
            - PUBCHEM_CID
            - KEGG_ID
            - HMDB_ID
            - CHEBI_ID
            - DOI
            - PUBMED_ID
            - GO_TERM_ID
            - EC_ID
            - METACYC_ID
            - REACTOME_ID
            - RHEA_ID
            - MASS_BANK_ID
          url:
            type: string
          nativeId:
            type: string
          revision:
            type: string
          dateCreated:
            type: string
            format: date-time
          dateLastModified:
            type: string
            format: date-time
          createdBy:
            type: string
          updatedBy:
            type: string
    SwissLipidsEntry:
      required:
      - transactionUuid
      type: object
      allOf:
      - $ref: '#/components/schemas/ArangoBaseEntity'
      - type: object
        properties:
          id:
            type: string
          arangoId:
            type: string
          transactionUuid:
            type: string
          visibility:
            type: string
            enum:
            - PRIVATE
            - RESTRICTED
            - PUBLIC
          normalizedName:
            type: string
          abbreviation:
            type: string
          description:
            type: string
          level:
            type: string
            enum:
            - CATEGORY
            - CLASS
            - SPECIES
            - MOLECULARSUBSPECIES
            - STRUCTURALSUBSPECIES
            - ISOMERICSUBSPECIES
          goslinLevel:
            type: string
            enum:
            - NO_LEVEL
            - UNDEFINED_LEVEL
            - CATEGORY
            - CLASS
            - SPECIES
            - MOLECULAR_SPECIES
            - SN_POSITION
            - STRUCTURE_DEFINED
            - FULL_STRUCTURE
            - COMPLETE_STRUCTURE
          synonyms:
            type: array
            items:
              type: string
          smiles:
            type: string
          nativeId:
            type: string
          nativeUrl:
            type: string
          parent:
            $ref: '#/components/schemas/SwissLipidsEntry'
          children:
            type: array
            items:
              $ref: '#/components/schemas/SwissLipidsEntry'
          crossReferences:
            type: array
            items:
              $ref: '#/components/schemas/CrossReference'
          revision:
            type: string
          dateCreated:
            type: string
            format: date-time
          dateLastModified:
            type: string
            format: date-time
          createdBy:
            type: string
          updatedBy:
            type: string
    EntityModelSwissLipidsEntry:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
    Links:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
    CollectionModelEntityModelSwissLipidsEntry:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            swissLipidsEntries:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelSwissLipidsEntry'
        _links:
          $ref: '#/components/schemas/Links'
    PageMetadata:
      type: object
      properties:
        size:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
    PagedModelEntityModelSwissLipidsEntry:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            swissLipidsEntries:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelSwissLipidsEntry'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    Authority:
      required:
      - transactionUuid
      type: object
      allOf:
      - $ref: '#/components/schemas/ArangoBaseEntity'
      - type: object
        properties:
          id:
            type: string
          arangoId:
            type: string
          transactionUuid:
            type: string
          visibility:
            type: string
            enum:
            - PRIVATE
            - RESTRICTED
            - PUBLIC
          name:
            type: string
          description:
            type: string
          revision:
            type: string
          dateCreated:
            type: string
            format: date-time
          dateLastModified:
            type: string
            format: date-time
          createdBy:
            type: string
          updatedBy:
            type: string
    Contact:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          format: int32
        name:
          type: string
        affiliation:
          type: string
        email:
          pattern: "^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$"
          type: string
      xml:
        name: Contact
    ControlledVocabulary:
      required:
      - transactionUuid
      type: object
      allOf:
      - $ref: '#/components/schemas/ArangoBaseEntity'
      - type: object
        properties:
          id:
            type: string
          arangoId:
            type: string
          transactionUuid:
            type: string
          visibility:
            type: string
            enum:
            - PRIVATE
            - RESTRICTED
            - PUBLIC
          label:
            type: string
          name:
            type: string
          uri:
            type: string
          version:
            type: string
          revision:
            type: string
          dateCreated:
            type: string
            format: date-time
          dateLastModified:
            type: string
            format: date-time
          createdBy:
            type: string
          updatedBy:
            type: string
    CvParameter:
      required:
      - transactionUuid
      type: object
      allOf:
      - $ref: '#/components/schemas/ArangoBaseEntity'
      - type: object
        properties:
          id:
            type: string
          arangoId:
            type: string
          transactionUuid:
            type: string
          visibility:
            type: string
            enum:
            - PRIVATE
            - RESTRICTED
            - PUBLIC
          accession:
            type: string
          name:
            type: string
          value:
            type: string
          booleanValue:
            type: boolean
          longValue:
            type: integer
            format: int64
          doubleValue:
            type: number
            format: double
          cvParameterType:
            type: string
            enum:
            - MARKER
            - BOOLEAN
            - NOMINAL
            - INTEGER
            - FLOAT
          cv:
            $ref: '#/components/schemas/ControlledVocabulary'
          parents:
            type: array
            items:
              $ref: '#/components/schemas/CvParameter'
          synonyms:
            type: array
            items:
              type: string
          referenceType:
            type: string
            enum:
            - BEST_ID_CONFIDENCE_MEASURE
            - SMALL_MOLECULE_QUANTIFICATION_UNIT
            - SAMPLE_DISEASE
            - SAMPLE_CELLTYPE
            - SAMPLE_ORGANISM
            - SAMPLE_TISSUE
            - SAMPLE_CUSTOM
            - ASSAY_CUSTOM
            - MS_RUN_FORMAT
            - MS_RUN_HASH_METHOD
            - MS_RUN_ID_FORMAT
            - MS_RUN_FRAGMENTATION_METHOD
            - MS_RUN_SCAN_POLARITY
            - STUDY_VARIABLE_FACTOR
            - INSTRUMENT_ANALYZER
            - INSTRUMENT_DETECTOR
            - INSTRUMENT_NAME
            - INSTRUMENT_SOURCE
            - UNSPECIFIED
          nativeId:
            type: string
          revision:
            type: string
          dateCreated:
            type: string
            format: date-time
          dateLastModified:
            type: string
            format: date-time
          createdBy:
            type: string
          updatedBy:
            type: string
    EntityModelSubmission:
      required:
      - transactionUuid
      type: object
      properties:
        id:
          type: string
        arangoId:
          type: string
        transactionUuid:
          type: string
        visibility:
          type: string
          enum:
          - PRIVATE
          - RESTRICTED
          - PUBLIC
        status:
          type: string
          enum:
          - IN_PROGRESS
          - SUBMITTED
          - IN_CURATION
          - IN_REVIEW
          - PUBLISHED
        submittedFiles:
          type: array
          items:
            $ref: '#/components/schemas/FileResource'
        storageBucket:
          type: string
          format: uuid
        study:
          $ref: '#/components/schemas/Study'
        submitter:
          $ref: '#/components/schemas/User'
        privateLinkUuid:
          type: string
          format: uuid
        revision:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateLastModified:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    FileResource:
      type: object
      properties:
        fileName:
          type: string
        filePath:
          type: string
        sha256Hash:
          type: string
        fileSize:
          type: integer
          format: int64
        fileType:
          type: string
          enum:
          - MZTAB_M
          - MZML
          - NATIVE_MS_FORMAT
          - SPREADSHEET
          - TEXT
          - IMAGE
          - BINARY
        validationMessages:
          type: array
          items:
            $ref: '#/components/schemas/ValidationMessage'
    MzTabResult:
      required:
      - transactionUuid
      type: object
      properties:
        id:
          type: string
        arangoId:
          type: string
        transactionUuid:
          type: string
        visibility:
          type: string
          enum:
          - PRIVATE
          - RESTRICTED
          - PUBLIC
        mzTabSummary:
          $ref: '#/components/schemas/MzTabSummary'
        nativeId:
          type: string
        submissionStatus:
          type: string
          enum:
          - IN_PROGRESS
          - SUBMITTED
          - IN_CURATION
          - IN_REVIEW
          - PUBLISHED
        cvParameters:
          type: array
          items:
            $ref: '#/components/schemas/CvParameter'
        rating:
          type: string
          enum:
          - UNRATED
          - AUTOMATICALLY_CHECKED
          - MANUALLY_CURATED
        completeness:
          type: string
          enum:
          - INCOMPLETE
          - SUMMARY
          - FULL
        submission:
          $ref: '#/components/schemas/Submission'
        revision:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateLastModified:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
    MzTabSummary:
      type: object
      properties:
        id:
          type: string
        version:
          type: string
        title:
          type: string
        description:
          type: string
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        publications:
          type: array
          items:
            $ref: '#/components/schemas/Publication'
        assayCount:
          type: integer
          format: int64
        msRunCount:
          type: integer
          format: int64
        studyVariableCount:
          type: integer
          format: int64
        sampleCount:
          type: integer
          format: int64
        smlCount:
          type: integer
          format: int64
        smfCount:
          type: integer
          format: int64
        smeCount:
          type: integer
          format: int64
        quantificationUnit:
          $ref: '#/components/schemas/Parameter'
    Parameter:
      required:
      - name
      - value
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          format: int32
        cv_label:
          type: string
        cv_accession:
          type: string
        name:
          type: string
        value:
          type: string
      xml:
        name: Parameter
    Publication:
      required:
      - publicationItems
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          format: int32
        publicationItems:
          type: array
          items:
            $ref: '#/components/schemas/PublicationItem'
      xml:
        name: Publication
    PublicationItem:
      required:
      - accession
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - doi
          - pubmed
          - uri
        accession:
          type: string
      xml:
        name: PublicationItem
    Study:
      required:
      - transactionUuid
      type: object
      properties:
        id:
          type: string
        arangoId:
          type: string
        transactionUuid:
          type: string
        visibility:
          type: string
          enum:
          - PRIVATE
          - RESTRICTED
          - PUBLIC
        nativeId:
          type: string
        name:
          type: string
        description:
          type: string
        cvTermReferences:
          type: array
          items:
            $ref: '#/components/schemas/CvParameter'
        mzTabResultReferences:
          type: array
          items:
            $ref: '#/components/schemas/MzTabResult'
        owner:
          $ref: '#/components/schemas/User'
        status:
          type: string
          enum:
          - IN_PROGRESS
          - SUBMITTED
          - IN_CURATION
          - IN_REVIEW
          - PUBLISHED
        revision:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateLastModified:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
    Submission:
      required:
      - transactionUuid
      type: object
      properties:
        id:
          type: string
        arangoId:
          type: string
        transactionUuid:
          type: string
        visibility:
          type: string
          enum:
          - PRIVATE
          - RESTRICTED
          - PUBLIC
        status:
          type: string
          enum:
          - IN_PROGRESS
          - SUBMITTED
          - IN_CURATION
          - IN_REVIEW
          - PUBLISHED
        submittedFiles:
          type: array
          items:
            $ref: '#/components/schemas/FileResource'
        storageBucket:
          type: string
          format: uuid
        study:
          $ref: '#/components/schemas/Study'
        submitter:
          $ref: '#/components/schemas/User'
        privateLinkUuid:
          type: string
          format: uuid
        revision:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateLastModified:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
    User:
      required:
      - transactionUuid
      type: object
      allOf:
      - $ref: '#/components/schemas/ArangoBaseEntity'
      - type: object
        properties:
          id:
            type: string
          arangoId:
            type: string
          transactionUuid:
            type: string
          visibility:
            type: string
            enum:
            - PRIVATE
            - RESTRICTED
            - PUBLIC
          userName:
            type: string
          firstName:
            type: string
          familyName:
            type: string
          emailAddress:
            type: string
          enabled:
            type: boolean
          accountNonExpired:
            type: boolean
          accountNonLocked:
            type: boolean
          credentialsNonExpired:
            type: boolean
          authorities:
            type: array
            items:
              $ref: '#/components/schemas/Authority'
          revision:
            type: string
          dateCreated:
            type: string
            format: date-time
          dateLastModified:
            type: string
            format: date-time
          createdBy:
            type: string
          updatedBy:
            type: string
    ValidationMessage:
      type: object
      properties:
        level:
          type: string
          enum:
          - INFO
          - WARN
          - ERROR
        source:
          type: string
          enum:
          - MZTAB_M_VALIDATION
          - INPUT_FILE_VALIDATION
          - POST_HOC_CHECKS_VALIDATION
        message:
          type: string
        code:
          type: string
    CollectionModelValidationMessage:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            validationMessages:
              type: array
              items:
                $ref: '#/components/schemas/ValidationMessage'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelEntityModelSubmission:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            submissions:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelSubmission'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelSubmission:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            submissions:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelSubmission'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelStudy:
      required:
      - transactionUuid
      type: object
      properties:
        id:
          type: string
        arangoId:
          type: string
        transactionUuid:
          type: string
        visibility:
          type: string
          enum:
          - PRIVATE
          - RESTRICTED
          - PUBLIC
        nativeId:
          type: string
        name:
          type: string
        description:
          type: string
        cvTermReferences:
          type: array
          items:
            $ref: '#/components/schemas/CvParameter'
        mzTabResultReferences:
          type: array
          items:
            $ref: '#/components/schemas/MzTabResult'
        owner:
          $ref: '#/components/schemas/User'
        status:
          type: string
          enum:
          - IN_PROGRESS
          - SUBMITTED
          - IN_CURATION
          - IN_REVIEW
          - PUBLISHED
        revision:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateLastModified:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelEntityModelStudy:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            studies:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelStudy'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelStudy:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            studies:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelStudy'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelMzTabResult:
      required:
      - transactionUuid
      type: object
      properties:
        id:
          type: string
        arangoId:
          type: string
        transactionUuid:
          type: string
        visibility:
          type: string
          enum:
          - PRIVATE
          - RESTRICTED
          - PUBLIC
        mzTabSummary:
          $ref: '#/components/schemas/MzTabSummary'
        nativeId:
          type: string
        submissionStatus:
          type: string
          enum:
          - IN_PROGRESS
          - SUBMITTED
          - IN_CURATION
          - IN_REVIEW
          - PUBLISHED
        cvParameters:
          type: array
          items:
            $ref: '#/components/schemas/CvParameter'
        rating:
          type: string
          enum:
          - UNRATED
          - AUTOMATICALLY_CHECKED
          - MANUALLY_CURATED
        completeness:
          type: string
          enum:
          - INCOMPLETE
          - SUMMARY
          - FULL
        submission:
          $ref: '#/components/schemas/Submission'
        revision:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateLastModified:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelEntityModelMzTabResult:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            mzTabResults:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelMzTabResult'
        _links:
          $ref: '#/components/schemas/Links'
    CvParameterFacet:
      type: object
      properties:
        referenceType:
          type: string
        facetValues:
          type: array
          items:
            $ref: '#/components/schemas/CvParameterFacetValue'
    CvParameterFacetValue:
      type: object
      properties:
        accession:
          type: string
        name:
          type: string
        count:
          type: integer
          format: int64
    LipidCompassQuery:
      required:
      - facets
      - lipidLevel
      - matchMode
      - mzTabResults
      - names
      - normalizeName
      - selectedFacets
      - unit
      type: object
      properties:
        lipidLevel:
          type: string
          enum:
          - NO_LEVEL
          - UNDEFINED_LEVEL
          - CATEGORY
          - CLASS
          - SPECIES
          - MOLECULAR_SPECIES
          - SN_POSITION
          - STRUCTURE_DEFINED
          - FULL_STRUCTURE
          - COMPLETE_STRUCTURE
        names:
          type: array
          items:
            type: string
        matchMode:
          type: string
          enum:
          - EXACT
          - FUZZY
          - PREFIX
          - SUFFIX
        normalizeName:
          type: boolean
        unit:
          type: string
        minValue:
          type: number
          format: double
        maxValue:
          type: number
          format: double
        minMass:
          type: number
          format: double
        maxMass:
          type: number
          format: double
        sumFormula:
          type: string
        mzTabResults:
          type: array
          items:
            $ref: '#/components/schemas/MzTabResult'
        facets:
          type: array
          items:
            $ref: '#/components/schemas/CvParameterFacet'
        selectedFacets:
          type: array
          items:
            $ref: '#/components/schemas/CvParameterFacet'
    PagedModelEntityModelMzTabResult:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            mzTabResults:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelMzTabResult'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelEntityModelCvParameterFacet:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            cvParameterFacets:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCvParameterFacet'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelCvParameterFacet:
      type: object
      properties:
        referenceType:
          type: string
        facetValues:
          type: array
          items:
            $ref: '#/components/schemas/CvParameterFacetValue'
        _links:
          $ref: '#/components/schemas/Links'
    LipidSpaceQueryDto:
      type: object
      properties:
        mzTabResultIds:
          type: array
          items:
            type: string
        lipidNames:
          type: array
          items:
            type: string
        sampleCvTerms:
          type: array
          items:
            type: string
        assayNames:
          type: array
          items:
            type: string
    EntityModelLipidSpacePcaResponse:
      required:
      - LinkageMatrix
      - LipidSpaces
      - LipidomeDistanceMatrix
      type: object
      properties:
        LipidSpaces:
          type: array
          items:
            $ref: '#/components/schemas/LipidSpace'
        LipidomeDistanceMatrix:
          type: array
          items:
            type: array
            items:
              type: number
              format: double
        LinkageMatrix:
          type: array
          items:
            type: array
            items:
              type: number
              format: double
        _links:
          $ref: '#/components/schemas/Links'
    LipidSpace:
      required:
      - ImportedLipidNames
      - Intensities
      - LipidNames
      - LipidomeName
      - X
      - "Y"
      type: object
      properties:
        LipidomeName:
          type: string
        LipidNames:
          type: array
          items:
            type: string
        ImportedLipidNames:
          type: array
          items:
            type: string
        Intensities:
          type: array
          items:
            type: number
            format: double
        X:
          type: array
          items:
            type: number
            format: double
        "Y":
          type: array
          items:
            type: number
            format: double
    Assay:
      required:
      - ms_run_ref
      - name
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          format: int32
        name:
          type: string
        custom:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
        external_uri:
          type: string
        sample_ref:
          $ref: '#/components/schemas/Sample'
        ms_run_ref:
          maxItems: 2147483647
          minItems: 1
          type: array
          xml:
            name: msRunRef
          items:
            $ref: '#/components/schemas/MsRun'
      xml:
        name: Assay
    FattyAcyl:
      required:
      - transactionUuid
      type: object
      properties:
        id:
          type: string
        arangoId:
          type: string
        transactionUuid:
          type: string
        visibility:
          type: string
          enum:
          - PRIVATE
          - RESTRICTED
          - PUBLIC
        name:
          type: string
        position:
          type: integer
          format: int32
        faBondType:
          type: string
          enum:
          - UNDEFINED
          - ESTER
          - ETHER_PLASMANYL
          - ETHER_PLASMENYL
          - ETHER_UNSPECIFIED
          - AMIDE
          - LCB_EXCEPTION
          - LCB_REGULAR
          - NO_FA
        faType:
          type: string
          enum:
          - FA
          - LCB
        doubleBondPositions:
          type: object
          additionalProperties:
            type: string
        ncarbon:
          type: integer
          format: int32
        nhydroxy:
          type: integer
          format: int32
        ndoubleBonds:
          type: integer
          format: int32
        revision:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateLastModified:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
    Instrument:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          format: int32
        name:
          $ref: '#/components/schemas/Parameter'
        source:
          $ref: '#/components/schemas/Parameter'
        analyzer:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
        detector:
          $ref: '#/components/schemas/Parameter'
      xml:
        name: Instrument
    Lipid:
      required:
      - transactionUuid
      type: object
      properties:
        id:
          type: string
        arangoId:
          type: string
        transactionUuid:
          type: string
        visibility:
          type: string
          enum:
          - PRIVATE
          - RESTRICTED
          - PUBLIC
        nativeUrl:
          type: string
        commonName:
          type: string
        normalizedShorthandName:
          type: string
        lipidLevel:
          type: string
          enum:
          - NO_LEVEL
          - UNDEFINED_LEVEL
          - CATEGORY
          - CLASS
          - SPECIES
          - MOLECULAR_SPECIES
          - SN_POSITION
          - STRUCTURE_DEFINED
          - FULL_STRUCTURE
          - COMPLETE_STRUCTURE
        synonyms:
          type: array
          items:
            type: string
        systematicName:
          type: string
        chemicalFormula:
          type: string
        exactMass:
          type: number
          format: float
        inchiKey:
          type: string
        inchi:
          type: string
        smiles:
          type: string
        mdlModel:
          type: string
        crossReferences:
          type: array
          items:
            $ref: '#/components/schemas/CrossReference'
        lipidCategory:
          type: string
        lipidClass:
          type: string
        lipidSpecies:
          type: string
        lipidMolecularSpecies:
          type: string
        lipidSnPosition:
          type: string
        lipidStructureDefined:
          type: string
        lipidFullStructure:
          type: string
        lipidCompleteStructure:
          type: string
        nativeId:
          type: string
        lipidSpeciesInfo:
          $ref: '#/components/schemas/FattyAcyl'
        lipidMapsEntry:
          type: array
          items:
            $ref: '#/components/schemas/LipidMapsEntry'
        swissLipidsEntry:
          type: array
          items:
            $ref: '#/components/schemas/SwissLipidsEntry'
        fattyAcyls:
          type: array
          items:
            $ref: '#/components/schemas/FattyAcyl'
        revision:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateLastModified:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
    LipidMapsEntry:
      required:
      - transactionUuid
      type: object
      allOf:
      - $ref: '#/components/schemas/ArangoBaseEntity'
      - type: object
        properties:
          id:
            type: string
          arangoId:
            type: string
          transactionUuid:
            type: string
          visibility:
            type: string
            enum:
            - PRIVATE
            - RESTRICTED
            - PUBLIC
          lmClassificationCode:
            type: string
          abbreviation:
            type: string
          normalizedName:
            type: string
          name:
            type: string
          systematicName:
            type: string
          lipidMapsCategory:
            type: string
          lipidMapsMainClass:
            type: string
          nativeId:
            type: string
          nativeUrl:
            type: string
          level:
            type: string
            enum:
            - CATEGORY
            - MAIN_CLASS
            - SUB_CLASS
          goslinLevel:
            type: string
            enum:
            - NO_LEVEL
            - UNDEFINED_LEVEL
            - CATEGORY
            - CLASS
            - SPECIES
            - MOLECULAR_SPECIES
            - SN_POSITION
            - STRUCTURE_DEFINED
            - FULL_STRUCTURE
            - COMPLETE_STRUCTURE
          parent:
            $ref: '#/components/schemas/LipidMapsEntry'
          children:
            type: array
            items:
              $ref: '#/components/schemas/LipidMapsEntry'
          crossReferences:
            type: array
            items:
              $ref: '#/components/schemas/CrossReference'
          revision:
            type: string
          dateCreated:
            type: string
            format: date-time
          dateLastModified:
            type: string
            format: date-time
          createdBy:
            type: string
          updatedBy:
            type: string
    LipidQuantity:
      required:
      - transactionUuid
      type: object
      properties:
        id:
          type: string
        arangoId:
          type: string
        transactionUuid:
          type: string
        visibility:
          type: string
          enum:
          - PRIVATE
          - RESTRICTED
          - PUBLIC
        lipids:
          type: array
          items:
            $ref: '#/components/schemas/Lipid'
        cvParameters:
          type: array
          items:
            $ref: '#/components/schemas/CvParameter'
        nativeId:
          type: string
        mzTabResultId:
          type: string
        smlId:
          type: integer
          format: int32
        assay:
          $ref: '#/components/schemas/MzTabAssay'
        studyVariable:
          $ref: '#/components/schemas/MzTabStudyVariable'
        assayQuantity:
          type: number
          format: double
        assayRelativeQuantity:
          type: number
          format: double
        quantificationUnit:
          $ref: '#/components/schemas/CvParameter'
        identificationReliability:
          type: string
        bestIdentificationConfidenceMeasure:
          $ref: '#/components/schemas/CvParameter'
        bestIdConfidenceValue:
          type: number
          format: double
        submission:
          $ref: '#/components/schemas/Submission'
        revision:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateLastModified:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
    MsRun:
      required:
      - id
      - location
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          format: int32
        name:
          type: string
        location:
          type: string
        instrument_ref:
          $ref: '#/components/schemas/Instrument'
        format:
          $ref: '#/components/schemas/Parameter'
        id_format:
          $ref: '#/components/schemas/Parameter'
        fragmentation_method:
          type: array
          xml:
            name: fragmentationMethod
          items:
            $ref: '#/components/schemas/Parameter'
        scan_polarity:
          type: array
          xml:
            name: scanPolarity
          items:
            $ref: '#/components/schemas/Parameter'
        hash:
          type: string
        hash_method:
          $ref: '#/components/schemas/Parameter'
      xml:
        name: MsRun
    MzTabAssay:
      required:
      - transactionUuid
      type: object
      properties:
        id:
          type: string
        arangoId:
          type: string
        transactionUuid:
          type: string
        visibility:
          type: string
          enum:
          - PRIVATE
          - RESTRICTED
          - PUBLIC
        cvParameters:
          type: array
          items:
            $ref: '#/components/schemas/CvParameter'
        nativeId:
          type: string
        assay:
          $ref: '#/components/schemas/Assay'
        submission:
          $ref: '#/components/schemas/Submission'
        revision:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateLastModified:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
    MzTabStudyVariable:
      required:
      - transactionUuid
      type: object
      properties:
        id:
          type: string
        arangoId:
          type: string
        transactionUuid:
          type: string
        visibility:
          type: string
          enum:
          - PRIVATE
          - RESTRICTED
          - PUBLIC
        studyVariable:
          $ref: '#/components/schemas/StudyVariable'
        nativeId:
          type: string
        submission:
          $ref: '#/components/schemas/Submission'
        revision:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateLastModified:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
    Sample:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          format: int32
        name:
          type: string
        custom:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
        species:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
        tissue:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
        cell_type:
          type: array
          xml:
            name: cellType
          items:
            $ref: '#/components/schemas/Parameter'
        disease:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
        description:
          type: string
      xml:
        name: Sample
    StudyVariable:
      required:
      - id
      - name
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          format: int32
        name:
          type: string
        assay_refs:
          type: array
          xml:
            name: assayRefs
          items:
            $ref: '#/components/schemas/Assay'
        average_function:
          $ref: '#/components/schemas/Parameter'
        variation_function:
          $ref: '#/components/schemas/Parameter'
        description:
          type: string
        factors:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
      xml:
        name: StudyVariable
    EntityModelLipidQuantity:
      required:
      - transactionUuid
      type: object
      properties:
        id:
          type: string
        arangoId:
          type: string
        transactionUuid:
          type: string
        visibility:
          type: string
          enum:
          - PRIVATE
          - RESTRICTED
          - PUBLIC
        lipids:
          type: array
          items:
            $ref: '#/components/schemas/Lipid'
        cvParameters:
          type: array
          items:
            $ref: '#/components/schemas/CvParameter'
        nativeId:
          type: string
        mzTabResultId:
          type: string
        smlId:
          type: integer
          format: int32
        assay:
          $ref: '#/components/schemas/MzTabAssay'
        studyVariable:
          $ref: '#/components/schemas/MzTabStudyVariable'
        assayQuantity:
          type: number
          format: double
        assayRelativeQuantity:
          type: number
          format: double
        quantificationUnit:
          $ref: '#/components/schemas/CvParameter'
        identificationReliability:
          type: string
        bestIdentificationConfidenceMeasure:
          $ref: '#/components/schemas/CvParameter'
        bestIdConfidenceValue:
          type: number
          format: double
        submission:
          $ref: '#/components/schemas/Submission'
        revision:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateLastModified:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelEntityModelLipidQuantity:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            lipidQuantities:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelLipidQuantity'
        _links:
          $ref: '#/components/schemas/Links'
    PagePlottableLipidSummaryStats:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/PlottableLipidSummaryStats'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/SortObject'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
    PlottableLipidSummaryStats:
      type: object
      properties:
        dataset:
          type: string
        normalizedShorthandNames:
          type: string
        lipidIds:
          type: array
          items:
            type: string
        quantificationUnit:
          type: string
        quantificationUnitAccession:
          type: string
        minAssayQuantity:
          type: number
          format: double
        averageAssayQuantity:
          type: number
          format: double
        maxAssayQuantity:
          type: number
          format: double
        stddevAssayQuantity:
          type: number
          format: double
        countAssayQuantity:
          type: number
          format: double
        perc25:
          type: number
          format: double
        perc50:
          type: number
          format: double
        perc75:
          type: number
          format: double
        iqr:
          type: number
          format: double
        lowerWhisker:
          type: number
          format: double
        upperWhisker:
          type: number
          format: double
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
    LipidQuantityDatasetAssayTableRow:
      type: object
      properties:
        dataset:
          type: string
        assay:
          type: string
        normalizedShorthandNames:
          type: string
        lipidLevel:
          type: array
          items:
            type: string
            enum:
            - NO_LEVEL
            - UNDEFINED_LEVEL
            - CATEGORY
            - CLASS
            - SPECIES
            - MOLECULAR_SPECIES
            - SN_POSITION
            - STRUCTURE_DEFINED
            - FULL_STRUCTURE
            - COMPLETE_STRUCTURE
        lipidCategory:
          type: string
        lipidClass:
          type: string
        lipidSpecies:
          type: string
        lipidMolecularSpecies:
          type: string
        lipidSnPosition:
          type: string
        lipidStructureDefined:
          type: string
        lipidFullStructure:
          type: string
        lipidCompleteStructure:
          type: string
        lipidIds:
          type: array
          items:
            type: string
        quantificationUnitAccession:
          type: string
        quantificationUnit:
          type: string
        assayQuantity:
          type: number
          format: double
        assayRelativeQuantity:
          type: number
          format: double
    PageLipidQuantityDatasetAssayTableRow:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/LipidQuantityDatasetAssayTableRow'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PagePlottableLipidQuantity:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/PlottableLipidQuantity'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PlottableLipidQuantity:
      type: object
      properties:
        dataset:
          type: string
        normalizedShorthandNames:
          type: string
        lipidClass:
          type: string
        lipidCategory:
          type: string
        lipidIds:
          type: array
          items:
            type: string
        quantificationUnit:
          type: string
        quantificationUnitAccession:
          type: string
        assayQuantityIds:
          type: array
          items:
            type: string
        assayQuantities:
          type: array
          items:
            type: number
            format: double
        minAssayQuantity:
          type: number
          format: double
        averageAssayQuantity:
          type: number
          format: double
        maxAssayQuantity:
          type: number
          format: double
        stddevAssayQuantity:
          type: number
          format: double
        countAssayQuantity:
          type: number
          format: double
        perc25:
          type: number
          format: double
        perc50:
          type: number
          format: double
        perc75:
          type: number
          format: double
        iqr:
          type: number
          format: double
        lowerWhisker:
          type: number
          format: double
        upperWhisker:
          type: number
          format: double
    PagedModelEntityModelLipidQuantity:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            lipidQuantities:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelLipidQuantity'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelLipidMapsEntry:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelEntityModelLipidMapsEntry:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            lipidMapsEntries:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelLipidMapsEntry'
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelLipidMapsEntry:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            lipidMapsEntries:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelLipidMapsEntry'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    EntityModelLipid:
      required:
      - transactionUuid
      type: object
      properties:
        id:
          type: string
        arangoId:
          type: string
        transactionUuid:
          type: string
        visibility:
          type: string
          enum:
          - PRIVATE
          - RESTRICTED
          - PUBLIC
        nativeUrl:
          type: string
        commonName:
          type: string
        normalizedShorthandName:
          type: string
        lipidLevel:
          type: string
          enum:
          - NO_LEVEL
          - UNDEFINED_LEVEL
          - CATEGORY
          - CLASS
          - SPECIES
          - MOLECULAR_SPECIES
          - SN_POSITION
          - STRUCTURE_DEFINED
          - FULL_STRUCTURE
          - COMPLETE_STRUCTURE
        synonyms:
          type: array
          items:
            type: string
        systematicName:
          type: string
        chemicalFormula:
          type: string
        exactMass:
          type: number
          format: float
        inchiKey:
          type: string
        inchi:
          type: string
        smiles:
          type: string
        mdlModel:
          type: string
        crossReferences:
          type: array
          items:
            $ref: '#/components/schemas/CrossReference'
        lipidCategory:
          type: string
        lipidClass:
          type: string
        lipidSpecies:
          type: string
        lipidMolecularSpecies:
          type: string
        lipidSnPosition:
          type: string
        lipidStructureDefined:
          type: string
        lipidFullStructure:
          type: string
        lipidCompleteStructure:
          type: string
        nativeId:
          type: string
        lipidSpeciesInfo:
          $ref: '#/components/schemas/FattyAcyl'
        lipidMapsEntry:
          type: array
          items:
            $ref: '#/components/schemas/LipidMapsEntry'
        swissLipidsEntry:
          type: array
          items:
            $ref: '#/components/schemas/SwissLipidsEntry'
        fattyAcyls:
          type: array
          items:
            $ref: '#/components/schemas/FattyAcyl'
        revision:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateLastModified:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelEntityModelLipid:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            lipids:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelLipid'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelString:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            strings:
              type: array
              items:
                type: string
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelLipid:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            lipids:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelLipid'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    HasMzTabResult:
      required:
      - transactionUuid
      type: object
      properties:
        id:
          type: string
        arangoId:
          type: string
        transactionUuid:
          type: string
        visibility:
          type: string
          enum:
          - PRIVATE
          - RESTRICTED
          - PUBLIC
        from:
          $ref: '#/components/schemas/Study'
        to:
          $ref: '#/components/schemas/MzTabResult'
        revision:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateLastModified:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
    EntityModelHasMzTabResult:
      required:
      - transactionUuid
      type: object
      properties:
        id:
          type: string
        arangoId:
          type: string
        transactionUuid:
          type: string
        visibility:
          type: string
          enum:
          - PRIVATE
          - RESTRICTED
          - PUBLIC
        from:
          $ref: '#/components/schemas/Study'
        to:
          $ref: '#/components/schemas/MzTabResult'
        revision:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateLastModified:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelEntityModelHasMzTabResult:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            hasMzTabResults:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelHasMzTabResult'
        _links:
          $ref: '#/components/schemas/Links'
    ArangoBaseEdge:
      required:
      - transactionUuid
      type: object
      allOf:
      - $ref: '#/components/schemas/ArangoBaseEntity'
      - type: object
        properties:
          id:
            type: string
          arangoId:
            type: string
          transactionUuid:
            type: string
          visibility:
            type: string
            enum:
            - PRIVATE
            - RESTRICTED
            - PUBLIC
          from:
            type: object
          to:
            type: object
          revision:
            type: string
          dateCreated:
            type: string
            format: date-time
          dateLastModified:
            type: string
            format: date-time
          createdBy:
            type: string
          updatedBy:
            type: string
    HasCvParent:
      required:
      - transactionUuid
      type: object
      allOf:
      - $ref: '#/components/schemas/ArangoBaseEdge'
      - type: object
        properties:
          id:
            type: string
          arangoId:
            type: string
          transactionUuid:
            type: string
          visibility:
            type: string
            enum:
            - PRIVATE
            - RESTRICTED
            - PUBLIC
          from:
            $ref: '#/components/schemas/CvParameter'
          to:
            $ref: '#/components/schemas/ControlledVocabulary'
          revision:
            type: string
          dateCreated:
            type: string
            format: date-time
          dateLastModified:
            type: string
            format: date-time
          createdBy:
            type: string
          updatedBy:
            type: string
    EntityModelHasCvParent:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelEntityModelHasCvParent:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            hasCvParents:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelHasCvParent'
        _links:
          $ref: '#/components/schemas/Links'
    HasCvParameterReference:
      required:
      - transactionUuid
      type: object
      allOf:
      - $ref: '#/components/schemas/ArangoBaseEdge'
      - type: object
        properties:
          id:
            type: string
          arangoId:
            type: string
          transactionUuid:
            type: string
          visibility:
            type: string
            enum:
            - PRIVATE
            - RESTRICTED
            - PUBLIC
          from:
            $ref: '#/components/schemas/ArangoBaseEntity'
          to:
            $ref: '#/components/schemas/CvParameter'
          revision:
            type: string
          dateCreated:
            type: string
            format: date-time
          dateLastModified:
            type: string
            format: date-time
          createdBy:
            type: string
          updatedBy:
            type: string
    EntityModelHasCvParameterReference:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelEntityModelHasCvParameterReference:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            hasCvParameterReferences:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelHasCvParameterReference'
        _links:
          $ref: '#/components/schemas/Links'
    HasCrossReference:
      required:
      - transactionUuid
      type: object
      allOf:
      - $ref: '#/components/schemas/ArangoBaseEdge'
      - type: object
        properties:
          id:
            type: string
          arangoId:
            type: string
          transactionUuid:
            type: string
          visibility:
            type: string
            enum:
            - PRIVATE
            - RESTRICTED
            - PUBLIC
          from:
            $ref: '#/components/schemas/Lipid'
          to:
            $ref: '#/components/schemas/CrossReference'
          revision:
            type: string
          dateCreated:
            type: string
            format: date-time
          dateLastModified:
            type: string
            format: date-time
          createdBy:
            type: string
          updatedBy:
            type: string
    EntityModelHasCrossReference:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelEntityModelHasCrossReference:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            hasCrossReferences:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelHasCrossReference'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelCvParameter:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelEntityModelCvParameter:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            cvParameters:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCvParameter'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelControlledVocabulary:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelEntityModelControlledVocabulary:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            controlledVocabularies:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelControlledVocabulary'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelCrossReference:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelEntityModelCrossReference:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            crossReferences:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCrossReference'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelUser:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelUser:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            users:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelUser'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    RepresentationModel:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelArangoBaseEntity:
      required:
      - transactionUuid
      type: object
      properties:
        id:
          type: string
        arangoId:
          type: string
        transactionUuid:
          type: string
        visibility:
          type: string
          enum:
          - PRIVATE
          - RESTRICTED
          - PUBLIC
        revision:
          type: string
        dateCreated:
          type: string
          format: date-time
        dateLastModified:
          type: string
          format: date-time
        createdBy:
          type: string
        updatedBy:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelLevel:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            levels:
              type: array
              items:
                type: string
                enum:
                - CATEGORY
                - CLASS
                - SPECIES
                - MOLECULARSUBSPECIES
                - STRUCTURALSUBSPECIES
                - ISOMERICSUBSPECIES
        _links:
          $ref: '#/components/schemas/Links'
    DatabaseStatistics:
      type: object
      properties:
        releaseVersion:
          type: string
        releaseDate:
          type: string
          format: date-time
        categories:
          type: integer
          format: int64
        classes:
          type: integer
          format: int64
        species:
          type: integer
          format: int64
        molecularSpecies:
          type: integer
          format: int64
        snPosition:
          type: integer
          format: int64
        structureDefined:
          type: integer
          format: int64
        completeStructure:
          type: integer
          format: int64
        fullStructure:
          type: integer
          format: int64
        noLevel:
          type: integer
          format: int64
        undefinedLevel:
          type: integer
          format: int64
        experiments:
          type: integer
          format: int64
        results:
          type: integer
          format: int64
        crossReferences:
          type: integer
          format: int64
        taxonomicSpecies:
          type: integer
          format: int64
        tissues:
          type: integer
          format: int64
        diseases:
          type: integer
          format: int64
        cellTypes:
          type: integer
          format: int64
        lipidQuantities:
          type: integer
          format: int64
        studyVariableFactors:
          type: integer
          format: int64
    LipidStatsResource:
      type: object
      properties:
        statistics:
          $ref: '#/components/schemas/DatabaseStatistics'
        _links:
          $ref: '#/components/schemas/Links'
    PagedResourcesAssemblerSmallMoleculeSummary:
      type: object
      properties:
        forceFirstAndLastRels:
          type: boolean
          writeOnly: true
    CollectionModelEntityModelSmallMoleculeSummary:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            smallMoleculeSummaries:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelSmallMoleculeSummary'
        _links:
          $ref: '#/components/schemas/Links'
    Comment:
      required:
      - msg
      - prefix
      type: object
      properties:
        prefix:
          type: string
          enum:
          - COM
        msg:
          type: string
        line_number:
          type: integer
          format: int32
      xml:
        name: Comment
    EntityModelSmallMoleculeSummary:
      required:
      - sml_id
      type: object
      properties:
        prefix:
          type: string
          enum:
          - SML
        header_prefix:
          type: string
          enum:
          - SMH
        sml_id:
          type: integer
          format: int32
        smf_id_refs:
          type: array
          xml:
            name: smfIdRefs
          items:
            type: integer
            format: int32
            xml:
              name: smfIdRefs
        database_identifier:
          type: array
          xml:
            name: databaseIdentifier
          items:
            type: string
            xml:
              name: databaseIdentifier
        chemical_formula:
          type: array
          xml:
            name: chemicalFormula
          items:
            type: string
            xml:
              name: chemicalFormula
        smiles:
          type: array
          items:
            type: string
            xml:
              name: smiles
        inchi:
          type: array
          items:
            type: string
            xml:
              name: inchi
        chemical_name:
          type: array
          xml:
            name: chemicalName
          items:
            type: string
            xml:
              name: chemicalName
        uri:
          type: array
          items:
            type: string
            xml:
              name: uri
        theoretical_neutral_mass:
          type: array
          xml:
            name: theoreticalNeutralMass
          items:
            type: number
            format: double
            xml:
              name: theoreticalNeutralMass
        adduct_ions:
          type: array
          xml:
            name: adductIons
          items:
            type: string
            xml:
              name: adductIons
        reliability:
          type: string
        best_id_confidence_measure:
          $ref: '#/components/schemas/Parameter'
        best_id_confidence_value:
          type: number
          format: double
        abundance_assay:
          type: array
          xml:
            name: abundanceAssay
          items:
            type: number
            format: double
            xml:
              name: abundanceAssay
        abundance_study_variable:
          type: array
          xml:
            name: abundanceStudyVariable
          items:
            type: number
            format: double
            xml:
              name: abundanceStudyVariable
        abundance_variation_study_variable:
          type: array
          xml:
            name: abundanceVariationStudyVariable
          items:
            type: number
            format: double
            xml:
              name: abundanceVariationStudyVariable
        opt:
          type: array
          items:
            $ref: '#/components/schemas/OptColumnMapping'
        comment:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        _links:
          $ref: '#/components/schemas/Links'
    OptColumnMapping:
      required:
      - identifier
      type: object
      properties:
        identifier:
          type: string
        param:
          $ref: '#/components/schemas/Parameter'
        value:
          type: string
      xml:
        name: OptColumnMapping
    EntityModelMsRunsPcaResultDto:
      type: object
      properties:
        msRuns:
          type: array
          items:
            type: string
        componentsMatrix:
          type: array
          items:
            type: array
            items:
              type: number
              format: float
        _links:
          $ref: '#/components/schemas/Links'
    CV:
      required:
      - full_name
      - label
      - uri
      - version
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          format: int32
        label:
          type: string
        full_name:
          type: string
        version:
          type: string
        uri:
          type: string
      xml:
        name: CV
    ColumnParameterMapping:
      required:
      - column_name
      - param
      type: object
      properties:
        column_name:
          type: string
        param:
          $ref: '#/components/schemas/Parameter'
      xml:
        name: ColumnParameterMapping
    Database:
      required:
      - param
      - prefix
      - uri
      - version
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          format: int32
        param:
          $ref: '#/components/schemas/Parameter'
        prefix:
          type: string
        version:
          type: string
        uri:
          type: string
      xml:
        name: Database
    EntityModelMetadata:
      required:
      - assay
      - cv
      - database
      - id_confidence_measure
      - ms_run
      - mzTab-ID
      - mzTab-version
      - prefix
      - quantification_method
      - small_molecule-quantification_unit
      - small_molecule_feature-quantification_unit
      - software
      - study_variable
      type: object
      properties:
        prefix:
          type: string
          enum:
          - MTD
        mzTab-version:
          pattern: "^\\d{1}\\.\\d{1}\\.\\d{1}-[A-Z]{1}$"
          type: string
        mzTab-ID:
          type: string
        title:
          type: string
        description:
          type: string
        contact:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        publication:
          type: array
          items:
            $ref: '#/components/schemas/Publication'
        uri:
          type: array
          items:
            $ref: '#/components/schemas/Uri'
        external_study_uri:
          type: array
          xml:
            name: externalStudyUri
          items:
            $ref: '#/components/schemas/Uri'
        instrument:
          type: array
          items:
            $ref: '#/components/schemas/Instrument'
        quantification_method:
          $ref: '#/components/schemas/Parameter'
        sample:
          type: array
          items:
            $ref: '#/components/schemas/Sample'
        sample_processing:
          type: array
          xml:
            name: sampleProcessing
          items:
            $ref: '#/components/schemas/SampleProcessing'
        software:
          type: array
          items:
            $ref: '#/components/schemas/Software'
        derivatization_agent:
          type: array
          xml:
            name: derivatizationAgent
          items:
            $ref: '#/components/schemas/Parameter'
        ms_run:
          type: array
          xml:
            name: msRun
          items:
            $ref: '#/components/schemas/MsRun'
        assay:
          type: array
          items:
            $ref: '#/components/schemas/Assay'
        study_variable:
          type: array
          xml:
            name: studyVariable
          items:
            $ref: '#/components/schemas/StudyVariable'
        custom:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
        cv:
          type: array
          items:
            $ref: '#/components/schemas/CV'
        small_molecule-quantification_unit:
          $ref: '#/components/schemas/Parameter'
        small_molecule_feature-quantification_unit:
          $ref: '#/components/schemas/Parameter'
        small_molecule-identification_reliability:
          $ref: '#/components/schemas/Parameter'
        database:
          type: array
          items:
            $ref: '#/components/schemas/Database'
        id_confidence_measure:
          type: array
          xml:
            name: idConfidenceMeasure
          items:
            $ref: '#/components/schemas/Parameter'
        colunit-small_molecule:
          type: array
          xml:
            name: colunitSmallMolecule
          items:
            $ref: '#/components/schemas/ColumnParameterMapping'
        colunit-small_molecule_feature:
          type: array
          xml:
            name: colunitSmallMoleculeFeature
          items:
            $ref: '#/components/schemas/ColumnParameterMapping'
        colunit-small_molecule_evidence:
          type: array
          xml:
            name: colunitSmallMoleculeEvidence
          items:
            $ref: '#/components/schemas/ColumnParameterMapping'
        _links:
          $ref: '#/components/schemas/Links'
    SampleProcessing:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          format: int32
        sampleProcessing:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
      xml:
        name: SampleProcessing
    Software:
      type: object
      properties:
        ting:
          $ref: '#/components/schemas/Software'
        id:
          minimum: 1
          type: integer
          format: int32
        parameter:
          $ref: '#/components/schemas/Parameter'
        setting:
          type: array
          items:
            type: string
            xml:
              name: setting
      xml:
        name: Software
    Uri:
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          format: int32
        value:
          type: string
      xml:
        name: Uri
    PagedResourcesAssemblerSmallMoleculeFeature:
      type: object
      properties:
        forceFirstAndLastRels:
          type: boolean
          writeOnly: true
    CollectionModelEntityModelSmallMoleculeFeature:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            smallMoleculeFeatures:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelSmallMoleculeFeature'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelSmallMoleculeFeature:
      required:
      - charge
      - exp_mass_to_charge
      - smf_id
      type: object
      properties:
        prefix:
          type: string
          enum:
          - SMF
        header_prefix:
          type: string
          enum:
          - SFH
        smf_id:
          type: integer
          format: int32
        sme_id_refs:
          type: array
          xml:
            name: smeIdRefs
          items:
            type: integer
            format: int32
            xml:
              name: smeIdRefs
        sme_id_ref_ambiguity_code:
          type: integer
          format: int32
        adduct_ion:
          pattern: "^\\[\\d*M([+-][\\w]*)\\]\\d*[+-]$"
          type: string
        isotopomer:
          $ref: '#/components/schemas/Parameter'
        exp_mass_to_charge:
          type: number
          format: double
        charge:
          type: integer
          format: int32
        retention_time_in_seconds:
          type: number
          format: double
        retention_time_in_seconds_start:
          type: number
          format: double
        retention_time_in_seconds_end:
          type: number
          format: double
        abundance_assay:
          type: array
          xml:
            name: abundanceAssay
          items:
            type: number
            format: double
            xml:
              name: abundanceAssay
        opt:
          type: array
          items:
            $ref: '#/components/schemas/OptColumnMapping'
        comment:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelEntityModelSmallMoleculeEvidence:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            smallMoleculeEvidences:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelSmallMoleculeEvidence'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelSmallMoleculeEvidence:
      required:
      - charge
      - database_identifier
      - evidence_input_id
      - exp_mass_to_charge
      - identification_method
      - ms_level
      - rank
      - sme_id
      - spectra_ref
      - theoretical_mass_to_charge
      type: object
      properties:
        prefix:
          type: string
          enum:
          - SME
        header_prefix:
          type: string
          enum:
          - SEH
        sme_id:
          type: integer
          format: int32
        evidence_input_id:
          type: string
        database_identifier:
          type: string
        chemical_formula:
          type: string
        smiles:
          type: string
        inchi:
          type: string
        chemical_name:
          type: string
        uri:
          type: string
        derivatized_form:
          $ref: '#/components/schemas/Parameter'
        adduct_ion:
          pattern: "^\\[\\d*M([-][\\w]*)\\]\\d*[+-]$"
          type: string
        exp_mass_to_charge:
          type: number
          format: double
        charge:
          type: integer
          format: int32
        theoretical_mass_to_charge:
          type: number
          format: double
        spectra_ref:
          type: array
          xml:
            name: spectraRef
          items:
            $ref: '#/components/schemas/SpectraRef'
        identification_method:
          $ref: '#/components/schemas/Parameter'
        ms_level:
          $ref: '#/components/schemas/Parameter'
        id_confidence_measure:
          type: array
          xml:
            name: idConfidenceMeasure
          items:
            type: number
            format: double
            xml:
              name: idConfidenceMeasure
        rank:
          minimum: 1
          type: integer
          format: int32
        opt:
          type: array
          items:
            $ref: '#/components/schemas/OptColumnMapping'
        comment:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        _links:
          $ref: '#/components/schemas/Links'
    SpectraRef:
      required:
      - ms_run
      - reference
      type: object
      properties:
        ms_run:
          $ref: '#/components/schemas/MsRun'
        reference:
          type: string
      xml:
        name: SpectraRef
    EntityModelLipidCompassQuery:
      required:
      - facets
      - lipidLevel
      - matchMode
      - mzTabResults
      - names
      - normalizeName
      - selectedFacets
      - unit
      type: object
      properties:
        lipidLevel:
          type: string
          enum:
          - NO_LEVEL
          - UNDEFINED_LEVEL
          - CATEGORY
          - CLASS
          - SPECIES
          - MOLECULAR_SPECIES
          - SN_POSITION
          - STRUCTURE_DEFINED
          - FULL_STRUCTURE
          - COMPLETE_STRUCTURE
        names:
          type: array
          items:
            type: string
        matchMode:
          type: string
          enum:
          - EXACT
          - FUZZY
          - PREFIX
          - SUFFIX
        normalizeName:
          type: boolean
        unit:
          type: string
        minValue:
          type: number
          format: double
        maxValue:
          type: number
          format: double
        minMass:
          type: number
          format: double
        maxMass:
          type: number
          format: double
        sumFormula:
          type: string
        mzTabResults:
          type: array
          items:
            $ref: '#/components/schemas/MzTabResult'
        facets:
          type: array
          items:
            $ref: '#/components/schemas/CvParameterFacet'
        selectedFacets:
          type: array
          items:
            $ref: '#/components/schemas/CvParameterFacet'
        _links:
          $ref: '#/components/schemas/Links'
    SummarizedLipidDataset:
      type: object
      properties:
        mzTabResultId:
          type: string
        quantificationUnitParamName:
          type: string
        quantificationUnitParamAccession:
          type: string
        lipidLevel:
          type: string
        x:
          type: array
          items:
            type: string
        "y":
          type: array
          items:
            type: number
            format: double
        lipidCategory:
          type: array
          items:
            type: string
        lipidClass:
          type: array
          items:
            type: string
        groupCount:
          type: array
          items:
            type: integer
            format: int64
    SummarizedLipidStatistics:
      type: object
      properties:
        quantificationUnitParamName:
          type: string
        quantificationUnitParamAccession:
          type: string
        lipidLevel:
          type: string
        x:
          type: array
          items:
            type: string
        "y":
          type: array
          items:
            type: number
            format: double
        lipidCategory:
          type: array
          items:
            type: string
        lipidClass:
          type: array
          items:
            type: string
        groupCount:
          type: array
          items:
            type: integer
            format: int64
        datasetCount:
          type: integer
          format: int64
    CollectionModelEntityModelMzTabResultsForLipid:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            mzTabResultsForLipids:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelMzTabResultsForLipid'
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelMzTabResultsForLipid:
      type: object
      properties:
        id:
          type: string
        nativeId:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PagedResourcesAssemblerLipidMapsEntry:
      type: object
      properties:
        forceFirstAndLastRels:
          type: boolean
          writeOnly: true
    EntityModelLipidSvg:
      type: object
      properties:
        lipidId:
          type: string
        svg:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    CollectionModelLipidLevel:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            lipidLevels:
              type: array
              items:
                type: string
                enum:
                - NO_LEVEL
                - UNDEFINED_LEVEL
                - CATEGORY
                - CLASS
                - SPECIES
                - MOLECULAR_SPECIES
                - SN_POSITION
                - STRUCTURE_DEFINED
                - FULL_STRUCTURE
                - COMPLETE_STRUCTURE
        _links:
          $ref: '#/components/schemas/Links'
    PagedModelEntityModelHasMzTabResult:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            hasMzTabResults:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelHasMzTabResult'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelEntityModelHasCvParent:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            hasCvParents:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelHasCvParent'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelEntityModelHasCvParameterReference:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            hasCvParameterReferences:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelHasCvParameterReference'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelEntityModelHasCrossReference:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            hasCrossReferences:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelHasCrossReference'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    CollectionModelGroupedCvParameters:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            groupedCvParameterses:
              type: array
              items:
                $ref: '#/components/schemas/GroupedCvParameters'
        _links:
          $ref: '#/components/schemas/Links'
    GroupedCvParameters:
      type: object
      properties:
        referenceType:
          type: string
          enum:
          - BEST_ID_CONFIDENCE_MEASURE
          - SMALL_MOLECULE_QUANTIFICATION_UNIT
          - SAMPLE_DISEASE
          - SAMPLE_CELLTYPE
          - SAMPLE_ORGANISM
          - SAMPLE_TISSUE
          - SAMPLE_CUSTOM
          - ASSAY_CUSTOM
          - MS_RUN_FORMAT
          - MS_RUN_HASH_METHOD
          - MS_RUN_ID_FORMAT
          - MS_RUN_FRAGMENTATION_METHOD
          - MS_RUN_SCAN_POLARITY
          - STUDY_VARIABLE_FACTOR
          - INSTRUMENT_ANALYZER
          - INSTRUMENT_DETECTOR
          - INSTRUMENT_NAME
          - INSTRUMENT_SOURCE
          - UNSPECIFIED
        name:
          type: array
          items:
            type: string
        accession:
          type: array
          items:
            type: string
    PagedModelEntityModelCvParameter:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            cvParameters:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCvParameter'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelEntityModelControlledVocabulary:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            controlledVocabularies:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelControlledVocabulary'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    PagedModelEntityModelCrossReference:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            crossReferences:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCrossReference'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    Link:
      type: object
      properties:
        href:
          type: string
        hreflang:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
        templated:
          type: boolean
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    OpenID:
      type: openIdConnect
      openIdConnectUrl: http://localhost:28080/auth/realms/lifs/.well-known/openid-configuration
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: http://localhost:28080/auth/realms/lifs/protocol/openid-connect/auth
          tokenUrl: http://localhost:28080/auth/realms/lifs/protocol/openid-connect/token
          scopes: {}
